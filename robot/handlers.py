import os
import sys
from aiogram import Bot, Dispatcher, types
import database
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, BotCommand
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery
from aiogram.utils.callback_data import CallbackData
import aiohttp
import random
import logging
import base64
import json
from start import restart_main
import re
from aiogram.utils.exceptions import TelegramAPIError
import string

logging.basicConfig(level=logging.INFO)

class CaptchaState(StatesGroup):
    input = State()

class ActivateState(StatesGroup):
    waiting_for_referral_code = State()

class CheckOrderState(StatesGroup):
    waiting_for_order_number = State()
    waiting_for_order_comment = State()

class TicketState(StatesGroup):
    waiting_for_city = State()
    waiting_for_ticket_subject = State()

class PaymentState(StatesGroup):
    choosing_method = State()

class ReviewState(StatesGroup):
    waiting_for_review_text = State()
    waiting_for_review_rating = State()

class SimPayState(StatesGroup):
    entering_amount = State()
    waiting_for_payment_confirmation = State()

class PayState(StatesGroup):
    choosing_method = State()
    entering_amount = State()

class CardPayState(StatesGroup):
    entering_amount = State()
    waiting_for_payment_confirmation = State()

class CouponPayState(StatesGroup):
    entering_coupon = State()

class PaymentSelectionState(StatesGroup):
    choosing_payment_method = State()

class CitySelectionState(StatesGroup):
    choosing_city = State()
    choosing_product = State()
    choosing_district = State()

async def set_default_commands(bot: Bot):
    commands = [
        BotCommand(command="/start", description="–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞"),
        BotCommand(command="/poll", description="–ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è"),
        BotCommand(command="/ref", description="–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞"),
        BotCommand(command="/balance", description="–ü—Ä–æ—Å–º–æ—Ç—Ä –±–∞–ª–∞–Ω—Å–∞"),
        BotCommand(command="/check", description="–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–∫–∞–∑–∞"),
        BotCommand(command="/help", description="–ü–æ–ª—É—á–∏—Ç—å –ø–æ–º–æ—â—å"),
        BotCommand(command="/connect", description="–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–∏–∫–µ—Ç–∞—Ö, –ø–µ—Ä–µ–∑–∞–∫–ª–∞–¥–∞—Ö –∏ –∑–∞–≤–∏—Å—à–∏—Ö –ø–ª–∞—Ç–µ–∂–∞—Ö"),
        BotCommand(command="/reviews", description="–°–ø–∏—Å–æ–∫ –æ—Ç–∑—ã–≤–æ–≤"),
        BotCommand(command="/addreview", description="–î–æ–±–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤"),
        BotCommand(command="/history", description="–ò—Å—Ç–æ—Ä–∏—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–π –∏ —Ä–∞—Å—Ö–æ–¥–æ–≤"),
        BotCommand(command="/lastorder", description="–ü—Ä–æ—Å–º–æ—Ç—Ä –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ—Å–ª–µ–¥–Ω–µ–º –∑–∞–∫–∞–∑–µ"),
        BotCommand(command="/pay", description="–ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å"),
        BotCommand(command="/trans", description="–°–ø–∏—Å–æ–∫ –∑–∞—è–≤–æ–∫ –Ω–∞ –æ–±–º–µ–Ω"),
        BotCommand(command="/issue", description="–°–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ –ø–µ—Ä–µ–∑–∞–∫–ª–∞–¥"),
        BotCommand(command="/myissues", description="–°–ø–∏—Å–æ–∫ –í–∞—à–∏—Ö –∑–∞—è–≤–æ–∫ –Ω–∞ –ø–µ—Ä–µ–∑–∞–∫–ª–∞–¥"),
        BotCommand(command="/ticket", description="–°–æ–∑–¥–∞—Ç—å –æ–±—Ä–∞—â–µ–Ω–∏–µ –≤ –º–∞–≥–∞–∑–∏–Ω"),
        BotCommand(command="/mytickets", description="–°–ø–∏—Å–æ–∫ –í–∞—à–∏—Ö –æ–±—Ä–∞—â–µ–Ω–∏–π –≤ –º–∞–≥–∞–∑–∏–Ω"),
        BotCommand(command="/exticket", description="–°–æ–∑–¥–∞—Ç—å –æ–±—Ä–∞—â–µ–Ω–∏–µ –ø–æ –∑–∞–≤–∏—Å—à–µ–º—É –ø–ª–∞—Ç–µ–∂—É"),
        BotCommand(command="/myextickets", description="–°–ø–∏—Å–æ–∫ –í–∞—à–∏—Ö –æ–±—Ä–∞—â–µ–Ω–∏–π –ø–æ –∑–∞–≤–∏—Å—à–∏–º –ø–ª–∞—Ç–µ–∂–∞–º"),
        BotCommand(command="/mybots", description="–°–ø–∏—Å–æ–∫ –í–∞—à–∏—Ö –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –±–æ—Ç–æ–≤"),
        BotCommand(command="/addbot", description="–î–æ–±–∞–≤–∏—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–≥–æ –±–æ—Ç–∞"),
        BotCommand(command="/editbot", description="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–≥–æ –±–æ—Ç–∞"),
        BotCommand(command="/removebot", description="–£–¥–∞–ª–µ–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–≥–æ –±–æ—Ç–∞"),
    ]
    await bot.set_my_commands(commands)

async def register_handlers(dp: Dispatcher, bot_token):
    @dp.message_handler(lambda message: message.text.lower() in ["@"], state="*")
    async def send_welcome(message: types.Message, state: FSMContext):
        await state.finish()
        user_id = message.from_user.id
        user_username = message.from_user.username if message.from_user.username else str(user_id)

    
        await set_default_commands(message.bot)
    
        if not database.check_user_exists(user_id, bot_token):
            if await send_random_captcha(message, state):
                await CaptchaState.input.set()
                return
    
            database.add_user(user_id, bot_token)
    
        cities = database.get_cities()
        random.shuffle(cities)
    
        city_list = "\n‚ûñ‚ûñ\n".join(
            [f"üè† <b>{city[1]}</b>\n[ –î–ª—è –≤—ã–±–æ—Ä–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ /city{city[0]} ]" for city in cities]
        )
    
        await message.answer(
            f"–ü—Ä–∏–≤–µ—Ç, <b>{user_username}</b>\n"
            "–í–∞—à –±–∞–ª–∞–Ω—Å: <b>üí∞0 —Ä—É–±.</b>\n"
            "–í—Å–µ–≥–æ –ø–æ–∫—É–ø–æ–∫: 0—à—Ç.\n"
            "‚ûñ‚ûñ‚ûñ\n"
            "–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø–æ–ª–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è (—Å –∫–æ–Ω—Ç–∞–∫—Ç–∞–º–∏ –º–∞–≥–∞–∑–∏–Ω–∞ –∏ –∫–æ–º–∞–Ω–¥–∞–º–∏ –±–æ—Ç–∞) –æ—Ç–ø—Ä–∞–≤—å—Ç–µ üëâ <b>@@</b>\n"
            "‚ûñ‚ûñ‚ûñ\n"
            "–î–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–º–∏ –±–æ—Ç–∞–º–∏ –Ω–∞–∂–º–∏—Ç–µ üëâ /mybots\n"
            "–î–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–≥–æ –±–æ—Ç–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ /addbot\n"
            "–ß—Ç–æ–±—ã –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å –¥–µ–Ω–µ–≥ –Ω–∞–∂–º–∏—Ç–µ üëâ /ref\n"
            "‚ûñ‚ûñ‚ûñ\n"
            "<b>–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥:</b>\n"
            "‚ûñ‚ûñ‚ûñ\n"
            f"{city_list}",
            parse_mode='HTML',
            disable_web_page_preview=True
        )
    
    @dp.message_handler(lambda message: message.text.lower() in ["/start", "@@"], state="*")
    async def send_full_message(message: types.Message, state: FSMContext):
        await state.finish()
    
        user_id = message.from_user.id
        user_username = message.from_user.username if message.from_user.username else str(user_id)

        cities = database.get_cities()
        random.shuffle(cities)

        city_list = "\n‚ûñ‚ûñ\n".join(
            [f"üè† <b>{city[1]}</b>\n[ –î–ª—è –≤—ã–±–æ—Ä–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ /city{city[0]} ]" for city in cities]
        )
    
        await message.answer(
            "<b>–í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –º–∞–≥–∞–∑–∏–Ω - kfp24.com \n\n–ù–∞—à–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã: </b>\n–°–∞–π—Ç –∞–≤—Ç–æ–ø—Ä–æ–¥–∞–∂ - https://kfp24.com\n\n–£–¥–∞—á–Ω—ã—Ö –ø–æ–∫—É–ø–æ–∫!\n"
            "‚ûñ‚ûñ‚ûñ\n"
            f"–ü—Ä–∏–≤–µ—Ç, <b>{user_username}</b>\n"
            "–í–∞—à –±–∞–ª–∞–Ω—Å: <b>üí∞0 —Ä—É–±.</b>\n"
            "–í—Å–µ–≥–æ –ø–æ–∫—É–ø–æ–∫: 0—à—Ç.\n"
            "‚ûñ‚ûñ‚ûñ\n"
            "–î–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ/pay –∏–ª–∏ !\n"
            "–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –±–∞–ª–∞–Ω—Å–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ/balance –∏–ª–∏ =\n"
            "–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏—Å—Ç–æ—Ä–∏–∏ –æ–ø–µ—Ä–∞—Ü–∏–π –ø–æ —Å—á–µ—Ç—É –Ω–∞–∂–º–∏—Ç–µ üëâ /history –∏–ª–∏ *\n"
            "–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–∏–∫–µ—Ç–∞—Ö, –ø–µ—Ä–µ–∑–∞–∫–ª–∞–¥–∞—Ö –∏ –∑–∞–≤–∏—Å—à–∏—Ö –ø–ª–∞—Ç–µ–∂–∞—Ö –Ω–∞–∂–º–∏—Ç–µ üëâ /connect\n"
            "‚ûñ‚ûñ‚ûñ\n"
            "–î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –∫–∞–∫ –ø—Ä–æ–≤–µ—Ä—è—Ç—å –∑–∞–∫–∞–∑—ã –Ω–∞–∂–º–∏—Ç–µ üëâ/check –∏–ª–∏ $\n"
            "‚ûñ‚ûñ‚ûñ\n"
            "–î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å 10 –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –æ—Ç–∑—ã–≤–æ–≤ –æ –Ω–∞—à–µ–º –º–∞–≥–∞–∑–∏–Ω–µ –Ω–∞–∂–º–∏—Ç–µ üëâ/reviews\n"
            "–î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤ –Ω–∞–∂–º–∏—Ç–µ üëâ/addreview –∏–ª–∏ +\n"
            "‚ûñ‚ûñ‚ûñ\n"
            "–î–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–º–∏ –±–æ—Ç–∞–º–∏ –Ω–∞–∂–º–∏—Ç–µ üëâ /mybots\n"
            "–î–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–≥–æ –±–æ—Ç–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ /addbot\n"
            "–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º–µ –Ω–∞–∂–º–∏—Ç–µ üëâ /ref\n"
            "‚ûñ‚ûñ‚ûñ\n"
            "–°–ø–∏—Å–æ–∫ –ø–æ–¥–ø–∏—Å–æ–∫ üëâ /sub\n"
            "–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –ø–æ–¥–ø–∏—Å–∫—É üëâ /addsub\n"
            "–£–¥–∞–ª–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É üëâ /remsub\n"
            "‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n"
            "–ß—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –∑–∞—è–≤–æ–∫ –Ω–∞ –ø–æ–∫—É–ø–∫–∏ –∏–ª–∏ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è —á–µ—Ä–µ–∑ SIM –∏–ª–∏ –±–∞–Ω–∫–æ–≤—Å–∫—É—é –∫–∞—Ä—Ç—É –Ω–∞–∂–º–∏—Ç–µ üëâ/trans –∏–ª–∏ /\n"
            "‚ûñ‚ûñ‚ûñ\n"
            "–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–º–æ—â–∏ –Ω–∞–∂–º–∏—Ç–µ üëâ /help –∏–ª–∏ ?\n"
            "–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∑–∞–∫–∞–∑–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ /lastorder –∏–ª–∏ #\n"
            "‚ûñ‚ûñ‚ûñ\n"
            "<b>–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥:</b>\n"
            "‚ûñ‚ûñ‚ûñ\n"
            f"{city_list}",
            parse_mode='HTML',
            disable_web_page_preview=True
        )

    @dp.message_handler(state=CaptchaState.input)
    async def handle_captcha_input(message: types.Message, state: FSMContext):
        async with state.proxy() as data:
            correct_answer = data.get('captcha_answer')
    
        if message.text.lower() == correct_answer.lower():
            user_id = message.from_user.id
            database.add_user(user_id, bot_token)
            await state.finish()
    
            cities = database.get_cities()
            city_list = "\n".join(
                [f"üè† <b>{city[1]}</b>\n[ –î–ª—è –≤—ã–±–æ—Ä–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ /city{city[0]} ]" for city in cities]
            )

            await message.answer(
                "–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø–æ–ª–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è (—Å –∫–æ–Ω—Ç–∞–∫—Ç–∞–º–∏ –º–∞–≥–∞–∑–∏–Ω–∞ –∏ –∫–æ–º–∞–Ω–¥–∞–º–∏ –±–æ—Ç–∞) –æ—Ç–ø—Ä–∞–≤—å—Ç–µ üëâ <b>@@</b>\n"
                "‚ûñ‚ûñ‚ûñ\n"
                "–î–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–º–∏ –±–æ—Ç–∞–º–∏ –Ω–∞–∂–º–∏—Ç–µ üëâ /mybots\n"
                "–î–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–≥–æ –±–æ—Ç–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ /addbot\n"
                "–ß—Ç–æ–±—ã –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å –¥–µ–Ω–µ–≥ –Ω–∞–∂–º–∏—Ç–µ üëâ /ref\n"
                "‚ûñ‚ûñ‚ûñ\n"
                "<b>–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥:</b>\n"
                "‚ûñ‚ûñ‚ûñ\n"
                f"{city_list}\n"
                "‚ûñ‚ûñ‚ûñ",
                parse_mode='HTML',
                disable_web_page_preview=True
            )
        else:
            await message.answer(
                "–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∫–æ–¥ –ø—Ä–æ–≤–µ—Ä–∫–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑!\n"
                "–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –∏ –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ /start –∏–ª–∏ @"
            )
            await send_random_captcha(message, state)

    async def send_random_captcha(message: types.Message, state: FSMContext):
        captcha_dir = os.path.join(os.path.dirname(__file__), 'captcha')
        if not os.path.exists(captcha_dir):
            logging.warning(f"Captcha directory does not exist: {captcha_dir}")
            return False
    
        if not os.listdir(captcha_dir):
            logging.warning(f"Captcha directory is empty: {captcha_dir}")
            return False
    
        captcha_files = [f for f in os.listdir(captcha_dir) if f.endswith('.jpg')]
        if not captcha_files:
            logging.warning("No captcha files found in the directory.")
            return False
    
        captcha_file = random.choice(captcha_files)
        captcha_path = os.path.join(captcha_dir, captcha_file)
        logging.info(f"Selected captcha file: {captcha_file}")
    
        try:
            with open(captcha_path, 'rb') as photo:
                await message.answer_photo(photo=photo, caption="–í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ —Å –∫–∞—Ä—Ç–∏–Ω–∫–∏ üëÜ")
                async with state.proxy() as data:
                    data['captcha_answer'] = captcha_file.rstrip('.jpg')
            logging.info(f"Captcha sent successfully. Answer: {captcha_file.rstrip('.jpg')}")
        except Exception as e:
            logging.error(f"Error sending captcha: {e}")
            return False
    
        return True

    @dp.message_handler(commands=['mybots'])
    async def handle_mybots(message: types.Message):
        await message.answer(
            "–ü—Ä–∏–≤–∞—Ç–Ω—ã–µ –±–æ—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /addbot —á—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ –±–æ—Ç–∞.\n"
            "–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –∏ –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ /start –∏–ª–∏ @"
        )
    
    @dp.message_handler(commands=['addbot'])
    async def handle_addbot(message: types.Message):
        await message.answer(
            "‚úå –û—Ç–ø—Ä–∞–≤—å—Ç–µ API Token —Å–≤–æ–µ–≥–æ Telegram –±–æ—Ç–∞ –≤ –æ—Ç–≤–µ—Ç–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏:\n"
            "‚ûñ‚ûñ‚ûñ‚ûñ\n"
            "–ï—Å–ª–∏ —É –í–∞—Å –Ω–µ—Ç —Å–≤–æ–µ–≥–æ API Token'–∞ –∏–ª–∏ –í—ã –Ω–µ –∑–Ω–∞–µ—Ç–µ, —á—Ç–æ —ç—Ç–æ —Ç–∞–∫–æ–µ, —Ç–æ–≥–¥–∞ –ø—Ä–æ—á–∏—Ç–∞–π—Ç–µ <b>–ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é</b> "
            '<a href="https://telegra.ph/Instrukciya-po-sozdaniyu-personalnogo-Telegram-bota-04-26-2">–∑–¥–µ—Å—å</a>\n'
            "‚ûñ‚ûñ‚ûñ‚ûñ\n"
            "1. –í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–º Telegram –∞–∫–∫–∞—É–Ω—Ç–æ–º –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –±–æ—Ç–æ–≤ - @BotFather\n"
            "‚ûñ‚ûñ‚ûñ‚ûñ\n"
            "2. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –µ–º—É –∫–æ–º–∞–Ω–¥—É /newbot.\n"
            "‚ûñ‚ûñ‚ûñ‚ûñ\n"
            "3. –î–∞–ª–µ–µ –æ–Ω –ø–æ–ø—Ä–æ—Å–∏—Ç –í–∞—Å –ø—Ä–∏–¥—É–º–∞—Ç—å –∏–º—è –¥–ª—è –í–∞—à–µ–≥–æ –±–æ—Ç–∞.\n"
            "‚ûñ‚ûñ‚ûñ‚ûñ\n"
            "4. –î–∞–ª–µ–µ –æ–Ω –ø–æ–ø—Ä–æ—Å–∏—Ç –í–∞—Å –ø—Ä–∏–¥—É–º–∞—Ç—å username –¥–ª—è –í–∞—à–µ–≥–æ –±–æ—Ç–∞. –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ, username –¥–æ–ª–∂–µ–Ω –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –∑–∞–∫–∞–Ω—á–∏–≤–∞—Ç—å—Å—è —Å–ª–æ–≤–æ–º bot\n"
            "‚ûñ‚ûñ‚ûñ‚ûñ\n"
            "5. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Å–≤–æ–π API Token –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –µ–≥–æ –Ω–∞—à–µ–º—É –±–æ—Ç—É –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ.\n"
            "‚ûñ‚ûñ‚ûñ‚ûñ\n"
            "–í–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–ª—É—á–∏—Ç—å —Å–≤–æ–π API Token —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ, —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ —ç—Ç–æ–≥–æ, –í—ã —Å–º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å —Å–≤–æ–µ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–≥–æ –±–æ—Ç–∞, –≤—ã—à–µ –æ–ø–∏—Å–∞–Ω –ø—Ä–æ—Ü–µ—Å—Å, —á—Ç–æ –í–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–¥–µ–ª–∞—Ç—å, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å API Token\n"
            "–ï—Å–ª–∏ –í—ã –≤—Å–µ —Å–¥–µ–ª–∞–µ—Ç–µ –≤–µ—Ä–Ω–æ, —Ç–æ –í–∞–º –ø—Ä–∏—à–ª—é—Ç API Token, –≤—ã–≥–ª—è–¥–∏—Ç—å –æ–Ω –ø—Ä–∏–º–µ—Ä–Ω–æ —Ç–∞–∫ - 1542120167:SFQ8ELnPFEQSQChTFEQLGQSXlImiU1f3F2a (–Ω–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥–∞–Ω–Ω—ã–π —Ç–æ–∫–µ–Ω, —ç—Ç–æ –ø—Ä–∏–º–µ—Ä, –æ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å –Ω–µ –±—É–¥–µ—Ç - –í–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–ª—É—á–∏—Ç—å —Å–≤–æ–π)\n"
            "‚ûñ‚ûñ‚ûñ‚ûñ\n"
            "–í–Ω–∏–º–∞–Ω–∏–µ! –î–æ–±–∞–≤–ª—è—Ç—å –∏ —É–ø—Ä–∞–≤–ª—è—Ç—å —Å–≤–æ–∏–º–∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–º–∏ –±–æ—Ç–∞–º–∏ –º–æ–∂–Ω–æ —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥—ã /addbot, /mybots\n"
            "‚ûñ‚ûñ‚ûñ‚ûñ\n"
            "–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –≤—Å–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø—Ä–∏—Ö–æ–¥–∏–ª–∏ –≤ –í–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –±–æ—Ç - –Ω–∏ –≤ –∫–æ–µ–º —Å–ª—É—á–∞–µ –Ω–µ –º–µ–Ω—è–π—Ç–µ –Ω–∏–∫ –∏–ª–∏ —Ç–æ–∫–µ–Ω —Å–≤–æ–µ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–≥–æ –±–æ—Ç–∞, –∏–Ω–∞—á–µ —Å–∞–º –±–æ—Ç –∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–µ—Ä–µ—Å—Ç–∞–Ω—É—Ç —Ä–∞–±–æ—Ç–∞—Ç—å!\n"
            "–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –∏ –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ /start –∏–ª–∏ @",
            parse_mode='HTML',
            disable_web_page_preview=False
        )
    
    @dp.message_handler(commands=['ref'])
    async def handle_ref(message: types.Message):
        bot_info = await message.bot.get_me()
        bot_username = bot_info.username
    
        await message.answer(
            "üí∞ –£–≤–∞–∂–∞–µ–º—ã–µ –∫–ª–∏–µ–Ω—Ç—ã! –î–µ–ª–∏—Ç–µ—Å—å —Å–≤–æ–∏–º–∏ –±–æ—Ç–∞–º–∏ —Å –¥—Ä—É–∑—å—è–º–∏ –∏ –ø–æ–ª—É—á–∞–π—Ç–µ <b>100 —Ä—É–±.</b> —Å –∫–∞–∂–¥–æ–≥–æ –µ–≥–æ –æ–ø–ª–∞—á–µ–Ω–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞ –Ω–∞ –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é —Å—É–º–º—É –æ—Ç <b>1500 —Ä—É–±.</b>\n"
            "‚ûñ‚ûñ\n"
            "–î–ª—è —ç—Ç–æ–≥–æ –ø—Ä–æ—Å—Ç–æ –¥–æ–±–∞–≤—å—Ç–µ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–≥–æ –±–æ—Ç–∞, —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã /addbot –∏ –ø–µ—Ä–µ–≤–µ–¥–∏—Ç–µ –µ–≥–æ –≤ —Ä–µ–∂–∏–º '–û—Ç–≤–µ—á–∞—Ç—å –≤—Å–µ–º', —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã /editbot\n"
            "–õ–∏–±–æ –µ—Å–ª–∏ —É –í–∞—Å —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω –±–æ—Ç, —Ç–æ –ø—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ–≤–µ–¥–∏—Ç–µ –µ–≥–æ –≤ —Ä–µ–∂–∏–º '–û—Ç–≤–µ—á–∞—Ç—å –≤—Å–µ–º', –Ω–æ —Å–æ–≤–µ—Ç—É–µ–º –ª—É—á—à–µ –∏–º–µ—Ç—å 2 –±–æ—Ç–∞ - –æ–¥–∏–Ω –ª–∏—á–Ω–æ –¥–ª—è –í–∞—Å, –∫–æ—Ç–æ—Ä—ã–π –æ—Ç–≤–µ—á–∞–µ—Ç —Ç–æ–ª—å–∫–æ –í–∞–º, –∞ –≤—Ç–æ—Ä–æ–π –¥–ª—è –¥—Ä—É–∑–µ–π, –∫–æ—Ç–æ—Ä—ã–π –æ—Ç–≤–µ—á–∞–µ—Ç –≤—Å–µ–º.\n"
            "‚ûñ‚ûñ\n"
            "–£—Å–ø–µ—Ö–æ–≤!\n"
            "–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –∏ –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ /start –∏–ª–∏ @",
            parse_mode='HTML'
        )
    
        user_id_base64 = base64.b64encode(str(message.from_user.id).encode()).decode().rstrip("=").lower()
    
        await message.answer(
            "<b>–í–Ω–∏–º–∞–Ω–∏–µ!</b> –î–µ–ª–∏—Ç–µ—Å—å —Å –¥—Ä—É–∑—å—è–º–∏ –í–∞—à–µ–π –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–æ–π –Ω–∞ –±–æ—Ç–∞ –∏ –ø–æ–ª—É—á–∞–π—Ç–µ <b>100 —Ä—É–±.</b> —Å –∫–∞–∂–¥–æ–≥–æ –µ–≥–æ –æ–ø–ª–∞—á–µ–Ω–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞ –Ω–∞ –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é —Å—É–º–º—É –æ—Ç <b>1500 —Ä—É–±.</b>\n"
            "‚ûñ\n"
            "<b>–í–∞—à–∞ —Å—Å—ã–ª–∫–∞ –∏ –∫–æ–¥:</b>\n"
            "‚ûñ\n"
            f"<code>https://t.me/{bot_username}?start={user_id_base64}</code>\n"
            "‚ûñ\n"
            "–î–ª—è —Ä—É—á–Ω–æ–π –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –∫–æ–¥–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /activate –∏ –∫–æ–¥ –Ω–∏–∂–µ:\n"
            "‚ûñ\n"
            f"<code>{user_id_base64}</code>\n"
            "‚ûñ\n"
            "–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –∏ –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ /start –∏–ª–∏ @",
            parse_mode='HTML'
        )
    
    @dp.message_handler(commands=['activate'])
    async def handle_activate(message: types.Message, state: FSMContext):
        await message.answer(
            "–í –æ—Ç–≤–µ—Ç–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ –≤–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –í–∞—à–µ–≥–æ —Ä–µ—Ñ–æ–≤–æ–¥–∞, –µ—Å–ª–∏ –∫–æ–¥–∞ –Ω–µ—Ç, –Ω–∞–∂–º–∏—Ç–µ üëâ/start –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ @ —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ø–æ–∫—É–ø–∫–∏."
        )
        await ActivateState.waiting_for_referral_code.set()
    
    @dp.message_handler(state=ActivateState.waiting_for_referral_code)
    async def handle_referral_code_input(message: types.Message, state: FSMContext):
        await message.answer(
            "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥\n"
            "–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –∏ –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ /start –∏–ª–∏ @"
        )

    @dp.message_handler(commands=['mytickets', 'myissues', 'myextickets'])
    async def handle_not_found_commands(message: types.Message):
        if message.text == '/mytickets' or message.text == '/myissues':
            await message.answer("–î–∏–∞–ª–æ–≥–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        elif message.text == '/myextickets':
            await message.answer("–û–±—Ä–∞—â–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
    
    @dp.message_handler(commands=['ticket'])
    async def handle_ticket_command(message: types.Message, state: FSMContext):
        cities = database.get_cities()
        city_list = "\n".join(
            [f"üè† <b>{city[1]}</b>\n[ –î–ª—è –≤—ã–±–æ—Ä–∞ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ üëâ {city[0]} ]" for city in cities]
        )
    
        await message.answer(
            "–î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∏–∫–µ—Ç–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π –≥–æ—Ä–æ–¥:\n"
            "‚ûñ‚ûñ‚ûñ\n"
            f"{city_list}\n"
            "‚ûñ‚ûñ‚ûñ\n"
            "–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –∏ –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ /start –∏–ª–∏ @",
            parse_mode='HTML'
        )
    
        await TicketState.waiting_for_city.set()
    
    @dp.message_handler(state=TicketState.waiting_for_city)
    async def handle_city_selection(message: types.Message, state: FSMContext):
        cities = database.get_cities()
        city_ids = [str(city[0]) for city in cities]
    
        if message.text not in city_ids:
            await message.answer(
                "–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥ —Å—Ç—Ä–æ–≥–æ –∏–∑ —Å–ø–∏—Å–∫–∞\n"
                "–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –∏ –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ /start –∏–ª–∏ @"
            )
            return
    
        await state.update_data(selected_city=message.text)
        await message.answer(
            "–í–≤–µ–¥–∏—Ç–µ —Ç–µ–º—É —Ç–∏–∫–µ—Ç–∞\n"
            "–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –∏ –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ /start –∏–ª–∏ @"
        )
        await state.finish()
    
    @dp.message_handler(commands=['connect'])
    async def handle_connect(message: types.Message):
        await message.answer(
            "–ß—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ —Ç–∏–∫–µ—Ç–æ–≤ –Ω–∞–∂–º–∏—Ç–µ üëâ /mytickets\n"
            "–ß—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å —Ç–∏–∫–µ—Ç –Ω–∞–∂–º–∏—Ç–µ üëâ /ticket\n"
            "‚ûñ‚ûñ‚ûñ\n"
            "–ß—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –∑–∞—è–≤–æ–∫ –Ω–∞ –ø–µ—Ä–µ–∑–∞–∫–ª–∞–¥ –Ω–∞–∂–º–∏—Ç–µ üëâ /myissues\n"
            "–ß—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ –ø–µ—Ä–µ–∑–∞–∫–ª–∞–¥ –Ω–∞–∂–º–∏—Ç–µ üëâ /issue\n"
            "‚ûñ‚ûñ‚ûñ\n"
            "–ß—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –æ–±—Ä–∞—â–µ–Ω–∏–π –ø–æ –∑–∞–≤–∏—Å—à–∏–º –ø–ª–∞—Ç–µ–∂–∞–º –Ω–∞–∂–º–∏—Ç–µ üëâ /myextickets\n"
            "–ß—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –æ–±—Ä–∞—â–µ–Ω–∏–µ –ø–æ –∑–∞–≤–∏—Å—à–µ–º—É –ø–ª–∞—Ç–µ–∂—É –Ω–∞–∂–º–∏—Ç–µ üëâ /exticket\n"
            "‚ûñ‚ûñ‚ûñ\n"
            "–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –∏ –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ /start –∏–ª–∏ @"
        )
    
    @dp.message_handler(commands=['issue'])
    async def handle_issue(message: types.Message):
        await message.answer(
            "–í—ã –µ—â–µ –Ω–µ –¥–µ–ª–∞–ª–∏ –∑–∞–∫–∞–∑–æ–≤ —á—Ç–æ–±—ã —Å–æ–∑–¥–∞–≤–∞—Ç—å –∑–∞—è–∫–∏ –Ω–∞ –ø–µ—Ä–µ–∑–∞–∫–ª–∞–¥\n"
            "–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –∏ –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ /start –∏–ª–∏ @"
        )
    
    @dp.message_handler(commands=['exticket'])
    async def handle_exticket(message: types.Message):
        await message.answer(
            "–í—ã –µ—â–µ –Ω–µ –¥–µ–ª–∞–ª–∏ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–π —á—Ç–æ–±—ã —Å–æ–∑–¥–∞–≤–∞—Ç—å –æ–±—Ä–∞—â–µ–Ω–∏—è\n"
            "–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –∏ –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ /start –∏–ª–∏ @"
        )
    
    @dp.message_handler(lambda message: message.text.lower() in ["/balance", "="], state="*")
    async def handle_balance(message: types.Message, state: FSMContext):
        await state.finish()
        await message.answer(
            "–í–∞—à –±–∞–ª–∞–Ω—Å:\n"
            "üí∞0 —Ä—É–±.\n"
            "‚ûñ\n"
            "–î–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ/pay –∏–ª–∏ !\n"
            "–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –±–∞–ª–∞–Ω—Å–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ/balance –∏–ª–∏ =\n"
            "–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏—Å—Ç–æ—Ä–∏–∏ –æ–ø–µ—Ä–∞—Ü–∏–π –ø–æ —Å—á–µ—Ç—É –Ω–∞–∂–º–∏—Ç–µ üëâ/history –∏–ª–∏ *\n"
            "–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –∏ –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ /start –∏–ª–∏ @"
        )
    
    @dp.message_handler(lambda message: message.text.lower() in ["/history", "*"], state="*")
    async def handle_history(message: types.Message, state: FSMContext):
        await state.finish()
        await message.answer(
            "–ò—Å—Ç–æ—Ä–∏—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–π –∏ —Ä–∞—Å—Ö–æ–¥–æ–≤:\n"
            "‚ûñ‚ûñ‚ûñ‚ûñ\n"
            "–û–ø–µ—Ä–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã\n"
            "‚ûñ‚ûñ‚ûñ‚ûñ\n"
            "–î–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ/pay –∏–ª–∏ !\n"
            "–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –±–∞–ª–∞–Ω—Å–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ/balance –∏–ª–∏ =\n"
            "–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏—Å—Ç–æ—Ä–∏–∏ –æ–ø–µ—Ä–∞—Ü–∏–π –ø–æ —Å—á–µ—Ç—É –Ω–∞–∂–º–∏—Ç–µ üëâ/history –∏–ª–∏ *\n"
            "–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –∏ –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ /start –∏–ª–∏ @"
        )
    
    @dp.message_handler(lambda message: message.text.lower() in ["/check", "$"], state="*")
    async def handle_check(message: types.Message):
        await message.answer(
            "‚ûñ‚ûñ‚ûñ‚ûñ\n"
            "–ï—Å–ª–∏ –í—ã –ø—Ä–æ–∏–∑–≤–µ–ª–∏ –æ–ø–ª–∞—Ç—É –∏ –∑–∞–∫—Ä—ã–ª–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—É:\n"
            "‚ûñ‚ûñ‚ûñ‚ûñ\n"
            "üëâ –ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ \n"
            "<b>/checkXXXX_XXXXXXXXX</b> (–Ω–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞_–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π), –Ω–∞–ø—Ä–∏–º–µ—Ä \n"
            "<b>/check1234_5678910</b>, —á—Ç–æ–±—ã –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ –∏ –ø–æ–ª—É—á–∏—Ç—å –∞–¥—Ä–µ—Å. –ù–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞ –∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –í—ã –ø–æ–ª—É—á–∞–µ—Ç–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –æ–ø–ª–∞—Ç—ã –∑–∞–∫–∞–∑–∞, –≥–¥–µ –≤—ã–¥–∞—é—Ç—Å—è —Ä–µ–∫–≤–∏–∑–∏—Ç—ã, –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ —ç—Ç–∏ –¥–∞–Ω–Ω—ã–µ –ø–µ—Ä–µ–¥ –æ–ø–ª–∞—Ç–æ–π.\n"
            "‚ûñ‚ûñ‚ûñ‚ûñ\n"
            "–°–ø–∏—Å–æ–∫ –ø–æ–¥–ø–∏—Å–æ–∫ üëâ /sub\n"
            "–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –ø–æ–¥–ø–∏—Å–∫—É üëâ /addsub\n"
            "–£–¥–∞–ª–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É üëâ /remsub\n"
            "‚ûñ‚ûñ‚ûñ‚ûñ\n"
            "–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –∏ –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ /start –∏–ª–∏ @",
            parse_mode='HTML'
        )
        await message.answer("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞ –∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å")
        await CheckOrderState.waiting_for_order_number.set()
    
    @dp.message_handler(lambda message: re.match(r'/check\d+_\d+', message.text), state='*')
    async def handle_check_order_with_comment(message: types.Message, state: FSMContext):
        await message.answer(
            "–ü–ª–∞—Ç–µ–∂ –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–∏—Å—Ç–µ–º–µ. –°–≤—è–∂–∏—Ç–µ—Å—å —Å —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π!\n"
            "–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –∏ –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ /start –∏–ª–∏ @"
        )
        await state.finish()
    
    @dp.message_handler(lambda message: message.text.lower().startswith('/check'), state='*')
    async def handle_check_command(message: types.Message, state: FSMContext):
        await state.finish()  # –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –ª—é–±–æ–≥–æ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
        await message.answer("–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –∑–∞–∫–∞–∑—É –∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å")
        await CheckOrderState.waiting_for_order_comment.set()
    
    @dp.message_handler(state=CheckOrderState.waiting_for_order_number)
    async def handle_order_number(message: types.Message, state: FSMContext):
        await state.update_data(order_number=message.text)
        await message.answer("–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –∑–∞–∫–∞–∑—É –∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å")
        await CheckOrderState.waiting_for_order_comment.set()
    
    @dp.message_handler(state=CheckOrderState.waiting_for_order_comment)
    async def handle_order_comment(message: types.Message, state: FSMContext):
        await message.answer(
            "–ü–ª–∞—Ç–µ–∂ –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–∏—Å—Ç–µ–º–µ. –°–≤—è–∂–∏—Ç–µ—Å—å —Å —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π!\n"
            "–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –∏ –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ /start –∏–ª–∏ @"
        )
        await state.finish()
    
    @dp.message_handler(commands=['reviews'])
    async def handle_reviews(message: types.Message):
        review_text = (
            "üèÉ –ê–≤—Ç–æ—Ä: <b>A*********1</b>\n"
            "üè¢ –ì–æ—Ä–æ–¥: <b>–ô–æ—à–∫–∞—Ä-–û–ª–∞</b>\n"
            "üçï –¢–æ–≤–∞—Ä: <b>üßä MEPHEDRONE CRYSTAL ICE 2.01–≥—Ä üßä</b>\n"
            "üìÜ –î–∞—Ç–∞: <b>30-08-2024 19:15:36</b>\n"
            "üìä –û—Ü–µ–Ω–∫–∞: ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê\n\n"
            "–í—Å–µ —á–∏–∫–∏ –ø–∏–∫–∏\n\n"
            "‚ûñ‚ûñ‚ûñ‚ûñ\n\n"
            "üèÉ –ê–≤—Ç–æ—Ä: <b>3*******9</b>\n"
            "üè¢ –ì–æ—Ä–æ–¥: <b>–ô–æ—à–∫–∞—Ä-–û–ª–∞</b>\n"
            "üçï –¢–æ–≤–∞—Ä: <b>–®–∏—à–∫–∏ \"White Widow\" 1–≥—Ä</b>\n"
            "üìÜ –î–∞—Ç–∞: <b>30-08-2024 19:51:21</b>\n"
            "üìä –û—Ü–µ–Ω–∫–∞: ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê\n\n"
            "–ë–∞–±–∫–∞ –≤ –∫—Ä–µ—Å–ª–µ.\n"
            "–°–Ω–æ–≤–∞ —Å—ã—Ä–æ–≤–∞—Ç–∞\n\n"
            "‚ûñ‚ûñ‚ûñ‚ûñ\n\n"
            "üèÉ –ê–≤—Ç–æ—Ä: <b>v*****6</b>\n"
            "üìÜ –î–∞—Ç–∞: <b>30-08-2024 22:27:48</b>\n"
            "üìä –û—Ü–µ–Ω–∫–∞: ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê\n\n"
            "131826 –æ—Ç–ª–∏—á–Ω–æ –≤ –∫–∞—Å–∞–Ω–∏–µ –∏ –∫–∞—á–µ—Å—Ç–≤–æ –æ–≥–æ–Ω—å —Ç–æ–ª—å–∫–æ –¥–∞–ª–µ–∫–æ –ø–∏—Å–µ—Ü\n\n"
            "‚ûñ‚ûñ‚ûñ‚ûñ\n\n"
            "üèÉ –ê–≤—Ç–æ—Ä: <b>a*********1</b>\n"
            "üìÜ –î–∞—Ç–∞: <b>31-08-2024 05:08:19</b>\n"
            "üìä –û—Ü–µ–Ω–∫–∞: ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê\n\n"
            "10/10\n\n"
            "‚ûñ‚ûñ‚ûñ‚ûñ\n\n"
            "üèÉ –ê–≤—Ç–æ—Ä: <b>5********4</b>\n"
            "üè¢ –ì–æ—Ä–æ–¥: <b>–ö–∞–∑–∞–Ω—å</b>\n"
            "üçï –¢–æ–≤–∞—Ä: <b>üó° –ú–ï–§–ï–î–†–û–ù –•–†–£–°–¢–ê–õ–¨–ù–´–ï –ò–ì–û–õ–ö–ò 3.01–≥—Ä üó°</b>\n"
            "üìÜ –î–∞—Ç–∞: <b>31-08-2024 06:36:26</b>\n"
            "üìä –û—Ü–µ–Ω–∫–∞: ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê\n\n"
            "–í –∫–∞—Å–∞–Ω–∏–µ üëå\n\n"
            "‚ûñ‚ûñ‚ûñ‚ûñ\n\n"
            "üèÉ –ê–≤—Ç–æ—Ä: <b>g********6</b>\n"
            "üè¢ –ì–æ—Ä–æ–¥: <b>–ö–∞–∑–∞–Ω—å</b>\n"
            "üçï –¢–æ–≤–∞—Ä: <b>üó° –ú–ï–§–ï–î–†–û–ù –•–†–£–°–¢–ê–õ–¨–ù–´–ï –ò–ì–û–õ–ö–ò 3.01–≥—Ä üó°</b>\n"
            "üìÜ –î–∞—Ç–∞: <b>31-08-2024 07:43:23</b>\n"
            "üìä –û—Ü–µ–Ω–∫–∞: ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê\n\n"
            "–ó–∞–±—Ä–∞–ª –≤—Å–µ –æ—Ç–ª–∏—á–Ω–æ\n\n"
            "‚ûñ‚ûñ‚ûñ‚ûñ\n\n"
            "üèÉ –ê–≤—Ç–æ—Ä: <b>s*****8</b>\n"
            "üè¢ –ì–æ—Ä–æ–¥: <b>–ô–æ—à–∫–∞—Ä-–û–ª–∞</b>\n"
            "üçï –¢–æ–≤–∞—Ä: <b>üßä MEPHEDRONE CRYSTAL ICE 2.01–≥—Ä üßä</b>\n"
            "üìÜ –î–∞—Ç–∞: <b>31-08-2024 08:30:11</b>\n"
            "üìä –û—Ü–µ–Ω–∫–∞: ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê\n\n"
            "–í–ø–µ—Ä–≤—ã–µ —É –≤–∞—Å , –ø—Ä–∏—à–µ–ª , –ø–æ–¥–Ω—è–ª , –ø–æ—à–ª–∏ –ø—Ä–æ–±—ã–≤–∞—Ç—å .\n\n"
            "‚ûñ‚ûñ‚ûñ‚ûñ\n\n"
            "üèÉ –ê–≤—Ç–æ—Ä: <b>D*********a</b>\n"
            "üè¢ –ì–æ—Ä–æ–¥: <b>–ô–æ—à–∫–∞—Ä-–û–ª–∞</b>\n"
            "üçï –¢–æ–≤–∞—Ä: <b>üßä MEPHEDRONE CRYSTAL ICE 2.01–≥—Ä üßä</b>\n"
            "üìÜ –î–∞—Ç–∞: <b>31-08-2024 08:50:48</b>\n"
            "üìä –û—Ü–µ–Ω–∫–∞: ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê\n\n"
            "–í—Å—ë —Ä–æ–≤–Ω–æ!!!\n\n"
            "‚ûñ‚ûñ‚ûñ‚ûñ\n\n"
            "üèÉ –ê–≤—Ç–æ—Ä: <b>s*****8</b>\n"
            "üìÜ –î–∞—Ç–∞: <b>31-08-2024 11:41:25</b>\n"
            "üìä –û—Ü–µ–Ω–∫–∞: ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê\n\n"
            "–í–ø–µ—Ä–≤—ã–µ –±—Ä–∞–ª –≤ –¥–∞–Ω–Ω–æ–º —à–æ–ø–µ ,–æ—Å—Ç–∞–ª—Å—è –¥–æ–≤–æ–ª—å–Ω—ã–π , –∑–∞–π–¥—É –µ—â–µ üòé\n\n"
            "‚ûñ‚ûñ‚ûñ‚ûñ\n\n"
            "üèÉ –ê–≤—Ç–æ—Ä: <b>Z***2</b>\n"
            "üè¢ –ì–æ—Ä–æ–¥: <b>–ö–∞–∑–∞–Ω—å</b>\n"
            "üçï –¢–æ–≤–∞—Ä: <b>üßä MEPHEDRONE CRYSTAL ICE 3.01–≥—Ä üßä</b>\n"
            "üìÜ –î–∞—Ç–∞: <b>31-08-2024 13:36:45</b>\n"
            "üìä –û—Ü–µ–Ω–∫–∞: ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê\n\n"
            "–ò –∑–¥–µ—Å—å –≤—Å–µ –º–≥–Ω–æ–≤–µ–Ω–Ω–æ, –±—ã—Å—Ç—Ä–æ. –í—Å–µ –æ—Ç–ª–∏—á–Ω–æ\n\n"
            "‚ûñ‚ûñ‚ûñ‚ûñ\n"
            "–ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤ –Ω–∞–∂–º–∏—Ç–µ üëâ <b>/addreview</b>\n"
            "‚ûñ‚ûñ‚ûñ‚ûñ\n"
            "–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –∏ –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ /start –∏–ª–∏ @"
        )
        
        review_text_additional = (
            "üèÉ –ê–≤—Ç–æ—Ä: <b>Z******g</b>\n"
            "üè¢ –ì–æ—Ä–æ–¥: <b>–ô–æ—à–∫–∞—Ä-–û–ª–∞</b>\n"
            "üçï –¢–æ–≤–∞—Ä: <b>üó° –ú–ï–§–ï–î–†–û–ù –•–†–£–°–¢–ê–õ–¨–ù–´–ï –ò–ì–û–õ–ö–ò 1.01–≥—Ä üó°</b>\n"
            "üìÜ –î–∞—Ç–∞: <b>31-08-2024 14:22:42</b>\n"
            "üìä –û—Ü–µ–Ω–∫–∞: ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê\n\n"
            "–í –∫–∞—Å–∞–Ω–∏–µ,—Å—Ç–∞—Ñ –±–µ—Ä–µ—Ç.\n\n"
            "‚ûñ‚ûñ‚ûñ‚ûñ\n\n"
            "üèÉ –ê–≤—Ç–æ—Ä: <b>Z******g</b>\n"
            "üè¢ –ì–æ—Ä–æ–¥: <b>–ô–æ—à–∫–∞—Ä-–û–ª–∞</b>\n"
            "üçï –¢–æ–≤–∞—Ä: <b>üó° –ú–ï–§–ï–î–†–û–ù –•–†–£–°–¢–ê–õ–¨–ù–´–ï –ò–ì–û–õ–ö–ò 1.01–≥—Ä üó°</b>\n"
            "üìÜ –î–∞—Ç–∞: <b>31-08-2024 14:25:37</b>\n"
            "üìä –û—Ü–µ–Ω–∫–∞: ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê\n\n"
            "–°—Ö–æ–¥—É –ø–æ–¥–Ω—è–ª,—Å—Ç. –ü—É—à–∫–∞\n\n"
            "‚ûñ‚ûñ‚ûñ‚ûñ\n\n"
            "üèÉ –ê–≤—Ç–æ—Ä: <b>T**********8</b>\n"
            "üìÜ –î–∞—Ç–∞: <b>31-08-2024 15:00:39</b>\n"
            "üìä –û—Ü–µ–Ω–∫–∞: ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê\n\n"
            "–í—Å–µ –æ—Ç–ª–∏—á–Ω–æüëçüëèüòÜ\n\n"
            "‚ûñ‚ûñ‚ûñ‚ûñ\n\n"
            "üèÉ –ê–≤—Ç–æ—Ä: <b>6********9</b>\n"
            "üè¢ –ì–æ—Ä–æ–¥: <b>–ö–∞–∑–∞–Ω—å</b>\n"
            "üçï –¢–æ–≤–∞—Ä: <b>üó° –ú–ï–§–ï–î–†–û–ù –•–†–£–°–¢–ê–õ–¨–ù–´–ï –ò–ì–û–õ–ö–ò 2.01–≥—Ä üó°</b>\n"
            "üìÜ –î–∞—Ç–∞: <b>31-08-2024 15:25:43</b>\n"
            "üìä –û—Ü–µ–Ω–∫–∞: ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê\n\n"
            "–î–æ–º–∞ –≤ –∫–∞—Å–∞–Ω–∏–µ\n\n"
            "‚ûñ‚ûñ‚ûñ‚ûñ\n\n"
            "üèÉ –ê–≤—Ç–æ—Ä: <b>d******o</b>\n"
            "üè¢ –ì–æ—Ä–æ–¥: <b>–ô–æ—à–∫–∞—Ä-–û–ª–∞</b>\n"
            "üçï –¢–æ–≤–∞—Ä: <b>üó° –ú–ï–§–ï–î–†–û–ù –•–†–£–°–¢–ê–õ–¨–ù–´–ï –ò–ì–û–õ–ö–ò 1.01–≥—Ä üó°</b>\n"
            "üìÜ –î–∞—Ç–∞: <b>31-08-2024 15:38:42</b>\n"
            "üìä –û—Ü–µ–Ω–∫–∞: ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê\n\n"
            "–≤—Å–µ –Ω–æ—Ä–º–∞–ª—å–Ω–æ –º–æ–∂–Ω–æ –±—Ä–∞—Ç—å, –∫–∞—á–∞–µ—Ç\n\n"
            "‚ûñ‚ûñ‚ûñ‚ûñ\n\n"
            "üèÉ –ê–≤—Ç–æ—Ä: <b>T******8</b>\n"
            "üè¢ –ì–æ—Ä–æ–¥: <b>–ö–∞–∑–∞–Ω—å</b>\n"
            "üçï –¢–æ–≤–∞—Ä: <b>üó° –ú–ï–§–ï–î–†–û–ù –•–†–£–°–¢–ê–õ–¨–ù–´–ï –ò–ì–û–õ–ö–ò 2.01–≥—Ä üó°</b>\n"
            "üìÜ –î–∞—Ç–∞: <b>31-08-2024 18:22:40</b>\n"
            "üìä –û—Ü–µ–Ω–∫–∞: ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê\n\n"
            "–í–æ–ø—Ä–æ—Å —Ä–µ—à–∏–ª–∏ –≤—Å–µ —Ö–æ—Ä–æ—à–æ —Å–ø–∞—Å–∏–±–æ –∫–æ–º–∞–Ω–¥–µ ‚ò∫Ô∏è\n\n"
            "‚ûñ‚ûñ‚ûñ‚ûñ\n\n"
            "üèÉ –ê–≤—Ç–æ—Ä: <b>d********1</b>\n"
            "üè¢ –ì–æ—Ä–æ–¥: <b>–ô–æ—à–∫–∞—Ä-–û–ª–∞</b>\n"
            "üçï –¢–æ–≤–∞—Ä: <b>–®–∏—à–∫–∏ \"White Widow\" 2–≥—Ä</b>\n"
            "üìÜ –î–∞—Ç–∞: <b>31-08-2024 18:30:41</b>\n"
            "üìä –û—Ü–µ–Ω–∫–∞: ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê\n\n"
            "–ü—Ä–∏—à–ª–æ—Å—å –ø–æ–ø–æ—Ç–µ—Ç—å —á—Ç–æ–±—ã –ø–æ–¥–Ω—è—Ç—å, –∫–æ—Ä–¥—ã –Ω–∞ —Ñ–æ—Ç–æ –Ω–µ–≤–µ—Ä–Ω—ã–µ, –Ω–∞—à–ª–∏ –º–µ—Å—Ç–æ —á—É–¥–æ–º –≤ 20-30 –º–µ—Ç—Ä–∞—Ö –æ—Ç –∫–æ—Ä–¥–æ–≤ –≤ –ø–æ–¥–ª–µ—Å–∫–µ –∫—É—Å—Ç–∏—Å—Ç–æ–º —Å–ø—É—Å—Ç—è —á–∞—Å, –Ω–µ–ø–ª–æ—Ö–æ –±—ã –¥–∞—Ç—å –∫—É–ø–æ–Ω –Ω–∞ —à–∏—à–∫–∏ –∫–∞–∫ ...\n\n"
            "‚ûñ‚ûñ‚ûñ‚ûñ\n\n"
            "üèÉ –ê–≤—Ç–æ—Ä: <b>c*******r</b>\n"
            "üè¢ –ì–æ—Ä–æ–¥: <b>–ô–æ—à–∫–∞—Ä-–û–ª–∞</b>\n"
            "üçï –¢–æ–≤–∞—Ä: <b>–®–∏—à–∫–∏ \"White Widow\" 2–≥—Ä</b>\n"
            "üìÜ –î–∞—Ç–∞: <b>31-08-2024 19:18:46</b>\n"
            "üìä –û—Ü–µ–Ω–∫–∞: ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê\n\n"
            "–í—Å–µ –æ—Ç–ª–∏—á–Ω–æ, –∫–∞—á–µ—Å—Ç–≤–æ –ø—É—à–∫–∞, —Å–Ω–∞—á–∞–ª–∞ –ø–æ–¥—É–º–∞–ª –ø—Ä–æ –¥—Ä—É–≥–æ–π —Ä–∞–π–æ–Ω, –Ω–æ –Ω–µ —Ç–∞–∫ —É–∂ –∏ –¥–∞–ª–µ–∫–æ –æ–∫–∞–∑–∞–ª—Å—è, –≤–∞—à–∏ –≤—Å–µ 10–∫–∏. –ü–æ–¥–æ–≥—Ä–µ–≤–∞–µ—Ç–µ –∫—É–ø–æ–Ω–∞–º–∏?\n\n"
            "‚ûñ‚ûñ‚ûñ‚ûñ\n\n"
            "üèÉ –ê–≤—Ç–æ—Ä: <b>M******7</b>\n"
            "üìÜ –î–∞—Ç–∞: <b>31-08-2024 21:42:47</b>\n"
            "üìä –û—Ü–µ–Ω–∫–∞: ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê\n\n"
            "–í—Å–µ –¥–æ–º–∞ –¥—É—à–∞)\n\n"
            "‚ûñ‚ûñ‚ûñ‚ûñ\n\n"
            "üèÉ –ê–≤—Ç–æ—Ä: <b>a********2</b>\n"
            "üè¢ –ì–æ—Ä–æ–¥: <b>–ö–∞–∑–∞–Ω—å</b>\n"
            "üçï –¢–æ–≤–∞—Ä: <b>üó° –ú–ï–§–ï–î–†–û–ù –•–†–£–°–¢–ê–õ–¨–ù–´–ï –ò–ì–û–õ–ö–ò 3.01–≥—Ä üó°</b>\n"
            "üìÜ –î–∞—Ç–∞: <b>31-08-2024 22:37:16</b>\n"
            "üìä –û—Ü–µ–Ω–∫–∞: ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê\n\n"
            "–ú–∞–≥–∞–∑ –±–æ–º–±–∞ —Å—Ç–∞—Ñ –±–æ–º–±–∞ –≤—Å–µ –¥–æ–º–∞\n\n"
            "‚ûñ‚ûñ‚ûñ‚ûñ\n"
            "–ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤ –Ω–∞–∂–º–∏—Ç–µ üëâ <b>/addreview</b>\n"
            "‚ûñ‚ûñ‚ûñ‚ûñ\n"
            "–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –∏ –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ /start –∏–ª–∏ @"
        )
    
        await message.answer(review_text, parse_mode='HTML')
        await message.answer(review_text_additional, parse_mode='HTML')
    
    @dp.message_handler(lambda message: message.text.lower() in ["/addreview", "+"], state="*")
    async def handle_addreview(message: types.Message):
        await message.answer(
            "üìä –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç –í–∞—à–µ–≥–æ –æ—Ç–∑—ã–≤–∞\n"
            "‚ûñ‚ûñ\n"
            "‚ùóÔ∏è –º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ –æ—Ç–∑—ã–≤–∞ - 5 –±—É–∫–≤\n"
            "‚ùóÔ∏è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ –æ—Ç–∑—ã–≤–∞ - 255 –±—É–∫–≤\n"
            "‚ûñ‚ûñ\n"
            "–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –∏ –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ /start –∏–ª–∏ @"
        )
        await ReviewState.waiting_for_review_text.set()
    
    @dp.message_handler(state=ReviewState.waiting_for_review_text)
    async def handle_review_text(message: types.Message, state: FSMContext):
        review_text = message.text.strip()
    
        if len(review_text) < 5:
            await message.answer(
                "–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ –æ—Ç–∑—ã–≤–∞ 5 —Å–∏–º–≤–æ–ª–æ–≤!\n"
                "–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –∏ –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ /start –∏–ª–∏ @"
            )
        elif len(review_text) > 255:
            await message.answer(
                "–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ –æ—Ç–∑—ã–≤–∞ 255 —Å–∏–º–≤–æ–ª–æ–≤!\n"
                "–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –∏ –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ /start –∏–ª–∏ @"
            )
        else:
            await state.update_data(review_text=review_text)
            await message.answer(
                "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –æ—Ü–µ–Ω–∫—É –í–∞—à–µ–≥–æ –æ—Ç–∑—ã–≤–∞ –æ—Ç 1 –¥–æ 5\n"
                "–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –∏ –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ /start –∏–ª–∏ @"
            )
            await ReviewState.waiting_for_review_rating.set()
    
    @dp.message_handler(state=ReviewState.waiting_for_review_rating)
    async def handle_review_rating(message: types.Message, state: FSMContext):
        rating = message.text.strip()
    
        if rating.isdigit() and 1 <= int(rating) <= 5:
            await message.answer(
                "üòç –°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ç–∑—ã–≤!\n"
                "–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –∏ –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ /start –∏–ª–∏ @"
            )
            await state.finish()
        else:
            await message.answer(
                "–ù–µ —É–∫–∞–∑–∞–Ω–∞ –æ—Ü–µ–Ω–∫–∞ –æ—Ç–∑—ã–≤–∞!\n"
                "–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –∏ –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ /start –∏–ª–∏ @"
            )
    
    @dp.message_handler(commands=['sub'])
    async def handle_sub(message: types.Message):
        await message.answer(
            "–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–¥–ø–∏—Å–æ–∫. –ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é –ø–æ–¥–ø–∏—Å–∫—É –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /addsub\n"
            "–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –∏ –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ /start –∏–ª–∏ @"
        )
    
    
    @dp.message_handler(commands=['addsub'])
    async def handle_addsub(message: types.Message):
        await message.answer(
            "‚ùóÔ∏è –í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –∂–µ–ª–∞–µ–º–æ–π –ø–æ–¥–ø–∏—Å–∫–∏:\n"
            "‚ûñ\n"
            "1. –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –≥–æ—Ä–æ–¥\n"
            "‚ûñ\n"
            "2. –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ —Ä–∞–π–æ–Ω\n"
            "‚ûñ\n"
            "3. –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ —Ç–æ–≤–∞—Ä\n"
            "‚ûñ\n"
            "–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –∏ –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ /start –∏–ª–∏ @"
        )
    
    
    @dp.message_handler(commands=['remsub'])
    async def handle_remsub(message: types.Message):
        await message.answer(
            "–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–¥–ø–∏—Å–æ–∫. –ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é –ø–æ–¥–ø–∏—Å–∫—É –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /addsub\n"
            "–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –∏ –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ /start –∏–ª–∏ @"
        )
    
    
    @dp.message_handler(lambda message: message.text.lower() in ["/trans", "/"])
    async def handle_trans(message: types.Message):
        await message.answer(
            "–ó–∞—è–≤–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã\n"
            "–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –∏ –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ /start –∏–ª–∏ @"
        )
    
    
    @dp.message_handler(lambda message: message.text.lower() in ["/help", "?"])
    async def handle_help(message: types.Message):
        await message.answer(
            "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –º–∞–≥–∞–∑–∏–Ω.\n"
            "–£–≤–∞–∂–∞–µ–º—ã–π –∫–ª–∏–µ–Ω—Ç, –±—É–¥—å—Ç–µ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω—ã –ø—Ä–∏ –æ–ø–ª–∞—Ç–µ –∏ –≤—ã–±–æ—Ä–µ —Ç–æ–≤–∞—Ä–∞.\n"
            "–ü–µ—Ä–µ–¥ –ø–æ–∫—É–ø–∫–æ–π —Ç–æ–≤–∞—Ä–∞, –±–æ—Ç –ø—Ä–µ–¥–ª–æ–∂–∏—Ç –í–∞–º –≥–æ—Ä–æ–¥, —Ç–æ–≤–∞—Ä –∏ —É–¥–æ–±–Ω—ã–π –¥–ª—è –í–∞—Å —Ä–∞–π–æ–Ω, –ø–æ—Å–ª–µ —á–µ–≥–æ, –≤—ã–¥–∞—Å—Ç —Ä–µ–∫–≤–∏–∑–∏—Ç—ã –¥–ª—è –æ–ø–ª–∞—Ç—ã.\n"
            "–í–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ –ø–µ—Ä–µ–¥ –ø–æ–∫—É–ø–∫–æ–π –ø—Ä–æ–≤–µ—Ä—è–π—Ç–µ —Ç–æ–≤–∞—Ä –∏ –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ä–∞–π–æ–Ω. –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –∑–∞–ø–∏—Å—ã–≤–∞–π—Ç–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã –¥–ª—è –æ–ø–ª–∞—Ç—ã (–Ω–æ–º–µ—Ä –∫–æ—à–µ–ª—å–∫–∞ –∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π).\n\n"
            "–ü—Ä–∏ –æ–ø–ª–∞—Ç–µ, –í–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —É–∫–∞–∑–∞—Ç—å–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π, –∫–æ—Ç–æ—Ä—ã–π –≤—ã–¥–∞–ª –í–∞–º –±–æ—Ç, –∏–Ω–∞—á–µ –æ–ø–ª–∞—Ç–∞ –Ω–µ –±—É–¥–µ—Ç –∑–∞—Å—á–∏—Ç–∞–Ω–∞ –≤ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–º —Ä–µ–∂–∏–º–µ –∏ –í—ã –Ω–µ –ø–æ–ª—É—á–∏—Ç–µ –∞–¥—Ä–µ—Å.\n"
            "–í—Å–µ–≥–¥–∞ –∑–∞–ø–∏—Å—ã–≤–∞–π—Ç–µ –Ω–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞ –∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π, —Å –ø–æ–º–æ—â—å—é –Ω–∏—Ö, –≤—ã —Å–º–æ–∂–µ—Ç–µ —É–∑–Ω–∞—Ç—å —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ (–ø–æ–ª—É—á–∏—Ç—å –∞–¥—Ä–µ—Å) –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç –∏ —Å –ª—é–±–æ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞. –°–æ—Ö—Ä–∞–Ω—è–π—Ç–µ —á–µ–∫ –¥–æ —Ç–µ—Ö –ø–æ—Ä, –ø–æ–∫–∞ –Ω–µ –ø–æ–ª—É—á–∏–ª–∏ –∞–¥—Ä–µ—Å. –ü—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–ª–∞—Ç–µ–∂–µ–π —Å –æ–¥–Ω–∏–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–º. –ü–ª–∞—Ç–µ–∂–∏ —Å—É–º–º–∏—Ä—É—é—Ç—Å—è –∏ –≤ —Å–ª—É—á–∞–µ, –µ—Å–ª–∏ —Å—É–º–º–∞ –ø–æ–ª–Ω–∞—è - –í—ã –ø–æ–ª—É—á–∞–µ—Ç–µ —Å–≤–æ–π –∞–¥—Ä–µ—Å.\n"
            "–ë—É–¥—å—Ç–µ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω—ã, –∫–æ—à–µ–ª–µ–∫, –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∏ —Å—É–º–º–∞ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Ç–æ—á–Ω—ã–º–∏. –ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–ª–∏ –∫–∞–∫–∏–µ-–ª–∏–±–æ –ø—Ä–æ–±–ª–µ–º—ã - –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –∫ –æ–ø–µ—Ä–∞—Ç–æ—Ä—É.\n\n"
            "–ü–æ—Å–ª–µ –≤–Ω–µ—Å–µ–Ω–∏—è –æ–ø–ª–∞—Ç—ã, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–ª–∞—Ç–µ–∂–∞ –∏ –µ—Å–ª–∏ –í–∞—à–∞ –æ–ø–ª–∞—Ç–∞ –±—É–¥–µ—Ç –Ω–∞–π–¥–µ–Ω–∞ - –í—ã –ø–æ–ª—É—á–∏—Ç–µ –∞–¥—Ä–µ—Å –≤ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–º —Ä–µ–∂–∏–º–µ.\n"
            "–¢–∞–∫ –∂–µ –¥–ª—è –í–∞—à–µ–≥–æ —É–¥–æ–±—Å—Ç–≤–∞ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –í–∞—à–µ–≥–æ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∑–∞–∫–∞–∑–∞, –¥–ª—è —ç—Ç–æ–≥–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞–∂–∞—Ç—å /lastorder\n"
            "–ê –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ —Å—Ç–∞—Ä—Ç–æ–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –∫ –≤—ã–±–æ—Ä—É –≥–æ—Ä–æ–¥–æ–≤, –ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏—Ç–µ /start –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.\n\n"
            "–ù—É–∂–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
            "/connect - –≤—ã–≤–æ–¥–∏—Ç –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è —Å–≤—è–∑–∏ —Å –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–µ–π\n"
            "/ticket - —Å–æ–∑–¥–∞—Ç—å —Ç–∏–∫–µ—Ç —Å –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–µ–π\n"
            "/mytickets - –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Ç–∏–∫–µ—Ç–æ–≤\n"
            "/myissues - –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 –∑–∞—è–≤–æ–∫ –ø–æ –Ω–µ–Ω–∞—Ö–æ–¥–∞–º\n"
            "/myextickets - –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 –∑–∞–≤–∏—Å—à–∏—Ö –ø–ª–∞—Ç–µ–∂–µ–π –Ω–∞ –æ–±–º–µ–Ω–Ω–∏–∫\n"
            "–ü—Ä–∏—è—Ç–Ω—ã—Ö –ø–æ–∫—É–ø–æ–∫!\n"
            "–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –∏ –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ /start –∏–ª–∏ @"
        )
    
    
    @dp.message_handler(lambda message: message.text.lower() in ["/lastorder", "#"])
    async def handle_lastorder(message: types.Message):
        await message.answer(
            "–í—Å–µ–≥–æ –ø–æ–∫—É–ø–æ–∫: 0—à—Ç.\n"
            "‚ûñ‚ûñ‚ûñ‚ûñ\n"
            "–£ –≤–∞—Å –Ω–µ—Ç –∑–∞–∫–∞–∑–æ–≤.\n\n"
            "–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –∏ –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ /start –∏–ª–∏ @"
        )
    
    @dp.message_handler(commands=['poll'])
    async def handle_poll(message: types.Message):
        await message.answer(
            "–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–π.\n"
            "–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –∏ –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ /start –∏–ª–∏ @"
        )

    async def handle_pay_command(message: types.Message, state: FSMContext):
        await PayState.choosing_method.set()
        await message.answer(
            "–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Ç–æ–¥ –ø–æ–ø–æ–ª–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞:\n"
            "‚ûñ‚ûñ‚ûñ‚ûñ\n"
            "<b>Bitcoin</b>\n"
            "[–î–ª—è –≤—ã–±–æ—Ä–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ /pay1]\n"
            "‚ûñ‚ûñ‚ûñ‚ûñ\n"
            "<b>Litecoin</b>\n"
            "[–î–ª—è –≤—ã–±–æ—Ä–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ /pay7]\n"
            "‚ûñ‚ûñ‚ûñ‚ûñ\n"
            "<b>–ë–∞–Ω–∫–æ–≤—Å–∫–∞—è –∫–∞—Ä—Ç–∞</b>\n"
            "[–î–ª—è –≤—ã–±–æ—Ä–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ /pay11]\n"
            "‚ûñ‚ûñ‚ûñ‚ûñ\n"
            "<b>SIM</b>\n"
            "[–î–ª—è –≤—ã–±–æ—Ä–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ /pay10]\n"
            "‚ûñ‚ûñ‚ûñ‚ûñ\n"
            "<b>–û–ø–ª–∞—Ç–∞ –∫—É–ø–æ–Ω–æ–º</b>\n"
            "[–î–ª—è –≤—ã–±–æ—Ä–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ /pay12]\n"
            "‚ûñ‚ûñ‚ûñ‚ûñ\n"
            "–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –∏ –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ /start –∏–ª–∏ @",
            parse_mode='HTML'
        )
    
    @dp.message_handler(lambda message: message.text.lower() in ["/pay", "!"], state="*")
    async def handle_pay_start(message: types.Message, state: FSMContext):
        await handle_pay_command(message, state)
        await PaymentState.choosing_method.set()
    
    @dp.message_handler(lambda message: message.text.lower() in ["/pay11"], state=PaymentState.choosing_method)
    async def handle_pay_card(message: types.Message, state: FSMContext):
        await state.update_data(payment_method="card")
        await message.answer(
            "‚ùó<b>–í–Ω–∏–º–∞–Ω–∏–µ! –ü–µ—Ä–µ–¥ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ–º, –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –æ–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏. –ù–∞–∂–∏–º–∞—è –∫–Ω–æ–ø–∫—É '–ü–æ–ø–æ–ª–Ω–∏—Ç—å' - –í—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å —Å –¥–∞–Ω–Ω—ã–º–∏ –ø—Ä–∞–≤–∏–ª–∞–º–∏.</b>\n\n"
            "–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –≤ —Ä—É–±–ª—è—Ö, –Ω–∞ –∫–æ—Ç–æ—Ä—É—é –í—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å, –æ–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏ –∏ —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ —ç—Ç–æ–≥–æ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É ‚ùó<b>'–ü–æ–ø–æ–ª–Ω–∏—Ç—å'. –í —Å–ª–µ–¥—É—é—â–µ–º –æ–∫–Ω–µ —Å–∏—Å—Ç–µ–º–∞ –≤—ã–¥–∞—Å—Ç —Ç–æ—á–Ω—É—é —Å—É–º–º—É –∫ –æ–ø–ª–∞—Ç–µ (—Å —É—á–µ—Ç–æ–º –∫–æ–º–∏—Å—Å–∏–∏) –∏ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã. –†–µ–∫–≤–∏–∑–∏—Ç—ã –∞–∫—Ç—É–∞–ª—å–Ω—ã 30 –º–∏–Ω—É—Ç, –ø–æ—Å–ª–µ —á–µ–≥–æ –∑–∞—è–≤–∫–∞ –Ω–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω–∞ –∏ –¥–µ–Ω—å–≥–∏ –Ω–µ –±—É–¥—É—Ç –≤–æ–∑–≤—Ä–∞—â–µ–Ω—ã. –û–ø–ª–∞—Ç–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ–¥–Ω–∏–º –ø–µ—Ä–µ–≤–æ–¥–æ–º. –ï—Å–ª–∏ –±—É–¥–µ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–µ—Ä–µ–≤–æ–¥–æ–≤ - –æ–ø–ª–∞—Ç–∞ –Ω–µ –∑–∞—á—Ç–µ—Ç—Å—è –∏ –¥–µ–Ω—å–≥–∏ –Ω–µ –≤–µ—Ä–Ω—É—Ç—Å—è.</b>\n\n"
            "–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è ‚ùó<b>–¢–û–ß–ù–û–ô –°–£–ú–ú–´</b> –¥–µ–Ω–µ–≥ –Ω–∞ –±–∞–ª–∞–Ω—Å –±–∞–Ω–∫–æ–≤—Å–∫–æ–π –∫–∞—Ä—Ç—ã! –û–±—ã—á–Ω–æ —ç—Ç–æ –∑–∞–Ω–∏–º–∞–µ—Ç 2-3 –º–∏–Ω—É—Ç—ã.\n\n"
            "‚ùó<b>–ù–∞–∂–∏–º–∞–π—Ç–µ '–Ø –æ–ø–ª–∞—Ç–∏–ª', —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ —Ä–µ–∞–ª—å–Ω–æ–π –æ–ø–ª–∞—Ç—ã.</b> –ï—Å–ª–∏ –ø–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è '–Ø –æ–ø–ª–∞—Ç–∏–ª' —Å–∏—Å—Ç–µ–º–∞ –Ω–µ —É–≤–∏–¥–∏—Ç –í–∞—à—É –æ–ø–ª–∞—Ç—É –≤ —Ç–µ—á–µ–Ω–∏–∏ 30 –º–∏–Ω—É—Ç, –≤–∞—à –∑–∞–∫–∞–∑ –±—É–¥–µ—Ç –æ—Ç–º–µ–Ω–µ–Ω –∏ –í—ã –Ω–µ –ø–æ–ª—É—á–∏—Ç–µ –¥–µ–Ω—å–≥–∏ –Ω–∞ –±–∞–ª–∞–Ω—Å.\n\n"
            "–ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–Ω–∫–æ–≤—Å–∫—É—é –∫–∞—Ä—Ç—É –º–æ–∂–Ω–æ –ª—é–±—ã–º —É–¥–æ–±–Ω—ã–º —Å–ø–æ—Å–æ–±–æ–º, –Ω–∞–ø—Ä–∏–º–µ—Ä: —Å–æ —Å–≤–æ–µ–≥–æ QIWI-–∫–æ—à–µ–ª—å–∫–∞, —Ç–µ—Ä–º–∏–Ω–∞–ª–∞, –±–∞–Ω–∫–æ–≤—Å–∫–æ–π –∫–∞—Ä—Ç—ã (card2card), Yandex.–î–µ–Ω—å–≥–∏, Payeer, WebMoney –∏ –¥—Ä—É–≥–∏–µ –ø–ª–∞—Ç–µ–∂–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã.\n\n"
            "–ü—Ä–∏ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–∏ - –ø–µ—Ä–µ–≤–æ–¥–∏—Ç–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ ‚ùó<b>–¢–û–ß–ù–£–Æ —Å—É–º–º—É</b>, –∫–æ—Ç–æ—Ä—É—é –í–∞–º –≤—ã–¥–∞–ª —Å–∞–π—Ç –≤–º–µ—Å—Ç–µ —Å —Ä–µ–∫–≤–∏–∑–∏—Ç–∞–º–∏! –ú–Ω–æ–≥–∏–µ —Ç–µ—Ä–º–∏–Ω–∞–ª—ã –±–µ—Ä—É—Ç –∫–æ–º–∏—Å—Å–∏—é –∏ —Å –Ω–∏—Ö —Å–ª–æ–∂–Ω–æ –æ–ø–ª–∞—Ç–∏—Ç—å —Ç–æ—á–Ω—É—é —Å—É–º–º—É, —Å—Ç–∞—Ä–∞–π—Ç–µ—Å—å —ç—Ç–æ–≥–æ –∏–∑–±–µ–≥–∞—Ç—å. –í–∞–∂–Ω–æ!\n\n"
            "‚ùó<b>–ö–Ω–æ–ø–∫–∞ '–Ø –æ–ø–ª–∞—Ç–∏–ª' –Ω–∞–∂–∏–º–∞–µ—Ç—Å—è –≤ —Å–∞–º—ã–π –ø–æ—Å–ª–µ–¥–Ω–∏–π –º–æ–º–µ–Ω—Ç, –∫–æ–≥–¥–∞ –í—ã –ø—Ä–æ–∏–∑–≤–µ–ª–∏ –æ–ø–ª–∞—Ç—É –∏ —É–≤–µ—Ä–µ–Ω—ã –≤ —Ç–æ—á–Ω–æ–π —Å—É–º–º–µ.</b>\n\n"
            "–ü—Ä–∏ —Ç–æ—á–Ω–æ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –≤—Å–µ—Ö –ø—Ä–∞–≤–∏–ª - –í–∞—à –±–∞–ª–∞–Ω—Å –±—É–¥–µ—Ç –º–≥–Ω–æ–≤–µ–Ω–Ω–æ –ø–æ–ø–æ–ª–Ω–µ–Ω! –í–æ–ø—Ä–æ—Å—ã –ø–æ –∑–∞–≤–∏—Å—à–∏–º –ø–ª–∞—Ç–µ–∂–∞–º –ø—Ä–∏–Ω–∏–º–∞—é—Ç—Å—è –≤ —Ç–µ—á–µ–Ω–∏–∏ —Å—É—Ç–æ–∫ —Å –º–æ–º–µ–Ω—Ç–∞ –æ–ø–ª–∞—Ç—ã. –ï—Å–ª–∏ –í–∞—à –±–∞–ª–∞–Ω—Å –Ω–µ –±—ã–ª –ø–æ–ø–æ–ª–Ω–µ–Ω –∏ –í—ã —Ä–µ–∞–ª—å–Ω–æ –ø–µ—Ä–µ–≤–µ–ª–∏ –¥–µ–Ω—å–≥–∏ –Ω–∞ –≤—ã–¥–∞–Ω–Ω—ã–µ –í–∞–º —Ä–µ–∫–≤–∏–∑–∏—Ç—ã - —Å–≤—è–∂–∏—Ç–µ—Å—å —Å–æ —Å–ª—É–∂–±–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –æ–±–º–µ–Ω–Ω–∏–∫–∞ –Ω–∞ –≤–∫–ª–∞–¥–∫–µ '–ó–∞–≤–∏—Å –ø–ª–∞—Ç–µ–∂?' –∏–ª–∏ '–ó–∞—è–≤–∫–∏ –Ω–∞ –ø–æ–∫—É–ø–∫–∏ –∏ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è', –ª–∏–±–æ –≤ –±–æ—Ç–µ –∫–æ–º–∞–Ω–¥–∞ /exticket –∏ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —É–∫–∞–∂–∏—Ç–µ –Ω–æ–º–µ—Ä –∑–∞—è–≤–∫–∏ –∏ –¥–µ—Ç–∞–ª–∏ –≤–∞—à–µ–≥–æ –ø–ª–∞—Ç–µ–∂–∞ –≤–º–µ—Å—Ç–µ —Å —Ç–æ—á–Ω–æ–π —Å—É–º–º–æ–π –æ–ø–ª–∞—Ç—ã. –°–∫—Ä–∏–Ω—à–æ—Ç—ã —á–µ–∫–æ–≤ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã! –ü–æ –∏—Å—Ç–µ—á–µ–Ω–∏–∏ —Å—É—Ç–æ–∫ –∑–∞–ø—Ä–æ—Å—ã –ø–æ –∑–∞–≤–∏—Å—à–∏–º –ø–ª–∞—Ç–µ–∂–∞–º –Ω–µ –ø—Ä–∏–Ω–∏–º–∞—é—Ç—Å—è! –ó–∞—è–≤–∫–∏ –Ω–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è —á–µ—Ä–µ–∑ —Å—Ç–æ—Ä–æ–Ω–Ω–∏–π –æ–±–º–µ–Ω–Ω–∏–∫, –µ—Å–ª–∏ –í—ã —Å–æ–∑–¥–∞–ª–∏ –æ–±—Ä–∞—â–µ–Ω–∏–µ –ø–æ –∑–∞–≤–∏—Å—à–µ–º—É –ø–ª–∞—Ç–µ–∂—É –∏ –í–∞—à—É –ø—Ä–æ–±–ª–µ–º—É –Ω–µ —Ä–µ—à–∏–ª–∏ - –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏ –º–∞–≥–∞–∑–∏–Ω–∞ –≤–æ –≤–∫–ª–∞–¥–∫–µ '–¢–∏–∫–µ—Ç—ã', –ª–∏–±–æ –≤ –±–æ—Ç–µ –∫–æ–º–∞–Ω–¥–∞ /ticket\n\n"
            "–ü–æ –∏—Å—Ç–µ—á–µ–Ω–∏–∏ —Å—É—Ç–æ–∫ –∑–∞–ø—Ä–æ—Å—ã –ø–æ –∑–∞–≤–∏—Å—à–∏–º –ø–ª–∞—Ç–µ–∂–∞–º –Ω–µ –ø—Ä–∏–Ω–∏–º–∞—é—Ç—Å—è!\n\n"
            "–ó–∞—è–≤–∫–∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è —á–µ—Ä–µ–∑ —Å—Ç–æ—Ä–æ–Ω–Ω–∏–π –æ–±–º–µ–Ω–Ω–∏–∫, –µ—Å–ª–∏ –í—ã —Å–æ–∑–¥–∞–ª–∏ –æ–±—Ä–∞—â–µ–Ω–∏–µ –ø–æ –∑–∞–≤–∏—Å—à–µ–º—É –ø–ª–∞—Ç–µ–∂—É –∏ –í–∞—à—É –ø—Ä–æ–±–ª–µ–º—É –Ω–µ —Ä–µ—à–∏–ª–∏ - –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏ –º–∞–≥–∞–∑–∏–Ω–∞\n\n"
            "–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –∏ –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ /start –∏–ª–∏ @",
            parse_mode='HTML'
        )
        await message.answer(
            "–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è:\n"
            "‚ùó <b>500 —Ä—É–±–ª–µ–π.</b>\n"
            "–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è:\n"
            "‚ùó <b>150 000 —Ä—É–±–ª–µ–π.</b>\n"
            "‚ûñ‚ûñ\n"
            "–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É, –Ω–∞ –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å\n"
            "–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –∏ –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ /start –∏–ª–∏ @",
            parse_mode='HTML'
        )
        await CardPayState.entering_amount.set()
    
    @dp.message_handler(lambda message: message.text.lower() in ["/pay10"], state=PaymentState.choosing_method)
    async def handle_pay_sim(message: types.Message, state: FSMContext):
        await state.update_data(payment_method="sim")
        await message.answer(
            "‚ùó<b>–í–Ω–∏–º–∞–Ω–∏–µ! –ü–µ—Ä–µ–¥ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ–º, –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –æ–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏. –ù–∞–∂–∏–º–∞—è –∫–Ω–æ–ø–∫—É '–ü–æ–ø–æ–ª–Ω–∏—Ç—å' - –í—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å —Å –¥–∞–Ω–Ω—ã–º–∏ –ø—Ä–∞–≤–∏–ª–∞–º–∏.</b>\n\n"
            "–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –≤ —Ä—É–±–ª—è—Ö, –Ω–∞ –∫–æ—Ç–æ—Ä—É—é –í—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å, –æ–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏ –∏ —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ —ç—Ç–æ–≥–æ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É ‚ùó<b>'–ü–æ–ø–æ–ª–Ω–∏—Ç—å'. –í —Å–ª–µ–¥—É—é—â–µ–º –æ–∫–Ω–µ —Å–∏—Å—Ç–µ–º–∞ –≤—ã–¥–∞—Å—Ç —Ç–æ—á–Ω—É—é —Å—É–º–º—É –∫ –æ–ø–ª–∞—Ç–µ (—Å —É—á–µ—Ç–æ–º –∫–æ–º–∏—Å—Å–∏–∏) –∏ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã. –†–µ–∫–≤–∏–∑–∏—Ç—ã –∞–∫—Ç—É–∞–ª—å–Ω—ã 30 –º–∏–Ω—É—Ç, –ø–æ—Å–ª–µ —á–µ–≥–æ –∑–∞—è–≤–∫–∞ –Ω–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω–∞ –∏ –¥–µ–Ω—å–≥–∏ –Ω–µ –±—É–¥—É—Ç –≤–æ–∑–≤—Ä–∞—â–µ–Ω—ã. –û–ø–ª–∞—Ç–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ–¥–Ω–∏–º –ø–µ—Ä–µ–≤–æ–¥–æ–º. –ï—Å–ª–∏ –±—É–¥–µ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–µ—Ä–µ–≤–æ–¥–æ–≤ - –æ–ø–ª–∞—Ç–∞ –Ω–µ –∑–∞—á—Ç–µ—Ç—Å—è –∏ –¥–µ–Ω—å–≥–∏ –Ω–µ –≤–µ—Ä–Ω—É—Ç—Å—è.</b>\n\n"
            "–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è ‚ùó<b>–¢–û–ß–ù–û–ô –°–£–ú–ú–´</b> –¥–µ–Ω–µ–≥ –Ω–∞ –±–∞–ª–∞–Ω—Å –º–æ–±–∏–ª—å–Ω–æ–≥–æ —Ç–µ–ª–µ—Ñ–æ–Ω–∞! –û–±—ã—á–Ω–æ —ç—Ç–æ –∑–∞–Ω–∏–º–∞–µ—Ç 30-60 —Å–µ–∫—É–Ω–¥.\n\n"
            "‚ùó<b>–ù–∞–∂–∏–º–∞–π—Ç–µ '–Ø –æ–ø–ª–∞—Ç–∏–ª', —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ —Ä–µ–∞–ª—å–Ω–æ–π –æ–ø–ª–∞—Ç—ã.</b> –ï—Å–ª–∏ –ø–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è '–Ø –æ–ø–ª–∞—Ç–∏–ª' —Å–∏—Å—Ç–µ–º–∞ –Ω–µ —É–≤–∏–¥–∏—Ç –í–∞—à—É –æ–ø–ª–∞—Ç—É –≤ —Ç–µ—á–µ–Ω–∏–∏ 3—Ö –º–∏–Ω—É—Ç, –≤–∞—à –∑–∞–∫–∞–∑ –±—É–¥–µ—Ç –æ—Ç–º–µ–Ω–µ–Ω –∏ –í—ã –Ω–µ –ø–æ–ª—É—á–∏—Ç–µ –¥–µ–Ω—å–≥–∏ –Ω–∞ –±–∞–ª–∞–Ω—Å.\n\n"
            "–û–ø–ª–∞—Ç–∞ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –Ω–∞ ‚ùó<b>–ù–û–ú–ï–† –ú–û–ë–ò–õ–¨–ù–û–ì–û –¢–ï–õ–ï–§–û–ù–ê</b>. –ü–æ–ø–æ–ª–Ω—è—Ç—å –≤—ã–¥–∞–Ω–Ω—ã–π –Ω–æ–º–µ—Ä –º–æ–∂–Ω–æ –ª—é–±—ã–º —Å–ø–æ—Å–æ–±–æ–º, –Ω–∞–ø—Ä–∏–º–µ—Ä —á–µ—Ä–µ–∑ —Ç–µ—Ä–º–∏–Ω–∞–ª, –æ—Ñ–∏—Å –º–æ–±–∏–ª—å–Ω–æ–≥–æ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞, –±–∞–Ω–∫–æ–≤—Å–∫–æ–π –∫–∞—Ä—Ç–æ–π, QIWI –∏ —Ç–∞–∫ –¥–∞–ª–µ–µ.\n\n"
            "‚ùó<b>–ù–µ –ø–µ—Ä–µ–≤–æ–¥–∏—Ç–µ –¥–µ–Ω—å–≥–∏ –Ω–∞ QIWI –∏–ª–∏ –ª—é–±—É—é –¥—Ä—É–≥—É—é –ø–ª–∞—Ç–µ–∂–Ω—É—é —Å–∏—Å—Ç–µ–º—É –≤—ã –∏—Ö —Ç–µ—Ä—è–µ—Ç–µ –ë–ï–ó –í–û–ó–ú–û–ñ–ù–û–°–¢–ò –í–û–ó–í–†–ê–¢–ê!</b>\n\n"
            "–ü—Ä–∏ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–∏ - –ø–µ—Ä–µ–≤–æ–¥–∏—Ç–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ ‚ùó<b>–¢–û–ß–ù–£–Æ —Å—É–º–º—É</b>, –∫–æ—Ç–æ—Ä—É—é –í–∞–º –≤—ã–¥–∞–ª —Å–∞–π—Ç –≤–º–µ—Å—Ç–µ —Å —Ä–µ–∫–≤–∏–∑–∏—Ç–∞–º–∏! –ú–Ω–æ–≥–∏–µ —Ç–µ—Ä–º–∏–Ω–∞–ª—ã –±–µ—Ä—É—Ç –∫–æ–º–∏—Å—Å–∏—é –∏ —Å –Ω–∏—Ö —Å–ª–æ–∂–Ω–æ –æ–ø–ª–∞—Ç–∏—Ç—å —Ç–æ—á–Ω—É—é —Å—É–º–º—É, —Å—Ç–∞—Ä–∞–π—Ç–µ—Å—å —ç—Ç–æ–≥–æ –∏–∑–±–µ–≥–∞—Ç—å. ‚ùó<b>–í–∞–∂–Ω–æ! –ï—Å–ª–∏ –ø–æ –∫–∞–∫–æ–π-–ª–∏–±–æ –ø—Ä–∏—á–∏–Ω–µ –í—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –Ω–µ —Ç–æ—á–Ω—É—é —Å—É–º–º—É - –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–Ω–æ–ø–∫–æ–π '–ò–∑–º–µ–Ω–∏—Ç—å —Å—É–º–º—É' –∏ –≤–≤–µ–¥–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Å—É–º–º—É (–∫–æ—Ç–æ—Ä—É—é –í—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –∏–ª–∏ –∫–æ—Ç–æ—Ä—É—é –∑–∞—á–∏—Å–ª–∏–ª —Ç–µ—Ä–º–∏–Ω–∞–ª). –¢–æ–ª—å–∫–æ –ø–æ—Å–ª–µ —Ç–æ–≥–æ, –∫–∞–∫ –í—ã —É–≤–µ—Ä–µ–Ω—ã –≤ —Å—É–º–º–µ - –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É '–Ø –æ–ø–ª–∞—Ç–∏–ª'.</b>\n\n"
            "–í–Ω–∏–º–∞–Ω–∏–µ! –ï—Å–ª–∏ –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å —Ä–µ–∫–≤–∏–∑–∏—Ç—ã, —Ç–æ —Å–¥–µ–ª–∞–π—Ç–µ –æ—Ç–º–µ–Ω—É –∏ —Å–æ–∑–¥–∞–π—Ç–µ –∑–∞—è–≤–∫—É —Å –¥—Ä—É–≥–æ–π —É–Ω–∏–∫–∞–ª—å–Ω–æ–π —Å—É–º–º–æ–π! –ù–∞–ø—Ä–∏–º–µ—Ä –µ—Å–ª–∏ –≤—ã —Å–æ–∑–¥–∞–ª–∏ –∑–∞—è–≤–∫—É –Ω–∞ 1500 —Ä—É–±–ª–µ–π –∏ –Ω–µ –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å —Ä–µ–∫–≤–∏–∑–∏—Ç—ã, —Ç–æ —Å–¥–µ–ª–∞–π—Ç–µ –æ—Ç–º–µ–Ω—É –∏ —Å–æ–∑–¥–∞–π—Ç–µ –∑–∞—è–≤–∫—É –Ω–∞ 1531 –∏–ª–∏ 1532 —Ä—É–±–ª—è.\n\n"
            "‚ùó<b>–ö–Ω–æ–ø–∫–∞ '–Ø –æ–ø–ª–∞—Ç–∏–ª' –Ω–∞–∂–∏–º–∞–µ—Ç—Å—è –≤ —Å–∞–º—ã–π –ø–æ—Å–ª–µ–¥–Ω–∏–π –º–æ–º–µ–Ω—Ç, –∫–æ–≥–¥–∞ –í—ã –ø—Ä–æ–∏–∑–≤–µ–ª–∏ –æ–ø–ª–∞—Ç—É –∏ —É–≤–µ—Ä–µ–Ω—ã –≤ —Ç–æ—á–Ω–æ–π —Å—É–º–º–µ. –ü—Ä–∏ —Ç–æ—á–Ω–æ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –≤—Å–µ—Ö –ø—Ä–∞–≤–∏–ª - –í–∞—à –±–∞–ª–∞–Ω—Å –±—É–¥–µ—Ç –º–≥–Ω–æ–≤–µ–Ω–Ω–æ –ø–æ–ø–æ–ª–Ω–µ–Ω!</b>\n\n"
            "–í–æ–ø—Ä–æ—Å—ã –ø–æ –∑–∞–≤–∏—Å—à–∏–º –ø–ª–∞—Ç–µ–∂–∞–º –ø—Ä–∏–Ω–∏–º–∞—é—Ç—Å—è –≤ —Ç–µ—á–µ–Ω–∏–∏ —Å—É—Ç–æ–∫ —Å –º–æ–º–µ–Ω—Ç–∞ –æ–ø–ª–∞—Ç—ã. –ï—Å–ª–∏ –í–∞—à –±–∞–ª–∞–Ω—Å –Ω–µ –±—ã–ª –ø–æ–ø–æ–ª–Ω–µ–Ω –∏ –í—ã —Ä–µ–∞–ª—å–Ω–æ –ø–µ—Ä–µ–≤–µ–ª–∏ –¥–µ–Ω—å–≥–∏ –Ω–∞ –≤—ã–¥–∞–Ω–Ω—ã–µ –í–∞–º —Ä–µ–∫–≤–∏–∑–∏—Ç—ã - —Å–≤—è–∂–∏—Ç–µ—Å—å —Å–æ —Å–ª—É–∂–±–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –æ–±–º–µ–Ω–Ω–∏–∫–∞ –Ω–∞ –≤–∫–ª–∞–¥–∫–µ '–ó–∞–≤–∏—Å –ø–ª–∞—Ç–µ–∂?' –∏–ª–∏ '–ó–∞—è–≤–∫–∏ –Ω–∞ –ø–æ–∫—É–ø–∫–∏ –∏ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è', –ª–∏–±–æ –≤ –±–æ—Ç–µ –∫–æ–º–∞–Ω–¥–∞ /exticket –∏ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —É–∫–∞–∂–∏—Ç–µ –Ω–æ–º–µ—Ä –∑–∞—è–≤–∫–∏ –∏ –¥–µ—Ç–∞–ª–∏ –≤–∞—à–µ–≥–æ –ø–ª–∞—Ç–µ–∂–∞ –≤–º–µ—Å—Ç–µ —Å —Ç–æ—á–Ω–æ–π —Å—É–º–º–æ–π –æ–ø–ª–∞—Ç—ã. –°–∫—Ä–∏–Ω—à–æ—Ç—ã —á–µ–∫–æ–≤ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã! –ü–æ –∏—Å—Ç–µ—á–µ–Ω–∏–∏ —Å—É—Ç–æ–∫ –∑–∞–ø—Ä–æ—Å—ã –ø–æ –∑–∞–≤–∏—Å—à–∏–º –ø–ª–∞—Ç–µ–∂–∞–º –Ω–µ –ø—Ä–∏–Ω–∏–º–∞—é—Ç—Å—è! –ó–∞—è–≤–∫–∏ –Ω–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è —á–µ—Ä–µ–∑ —Å—Ç–æ—Ä–æ–Ω–Ω–∏–π –æ–±–º–µ–Ω–Ω–∏–∫, –µ—Å–ª–∏ –í—ã —Å–æ–∑–¥–∞–ª–∏ –æ–±—Ä–∞—â–µ–Ω–∏–µ –ø–æ –∑–∞–≤–∏—Å—à–µ–º—É –ø–ª–∞—Ç–µ–∂—É –∏ –í–∞—à—É –ø—Ä–æ–±–ª–µ–º—É –Ω–µ —Ä–µ—à–∏–ª–∏ - –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏ –º–∞–≥–∞–∑–∏–Ω–∞ –≤–æ –≤–∫–ª–∞–¥–∫–µ '–¢–∏–∫–µ—Ç—ã', –ª–∏–±–æ –≤ –±–æ—Ç–µ –∫–æ–º–∞–Ω–¥–∞ /ticket\n\n"
            "–ó–∞—è–≤–∫–∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è —á–µ—Ä–µ–∑ —Å—Ç–æ—Ä–æ–Ω–Ω–∏–π –æ–±–º–µ–Ω–Ω–∏–∫, –µ—Å–ª–∏ –í—ã —Å–æ–∑–¥–∞–ª–∏ –æ–±—Ä–∞—â–µ–Ω–∏–µ –ø–æ –∑–∞–≤–∏—Å—à–µ–º—É –ø–ª–∞—Ç–µ–∂—É –∏ –í–∞—à—É –ø—Ä–æ–±–ª–µ–º—É –Ω–µ —Ä–µ—à–∏–ª–∏ - –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏ –º–∞–≥–∞–∑–∏–Ω–∞\n\n"
            "–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –∏ –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ /start –∏–ª–∏ @",
            parse_mode='HTML'
        )
        await message.answer(
            "–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è:\n"
            "‚ùó <b>500 —Ä—É–±–ª–µ–π.</b>\n"
            "–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è:\n"
            "‚ùó <b>100 000 —Ä—É–±–ª–µ–π.</b>\n"
            "‚ûñ‚ûñ\n"
            "–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É, –Ω–∞ –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å\n"
            "–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –∏ –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ /start –∏–ª–∏ @",
            parse_mode='HTML'
        )
        await SimPayState.entering_amount.set()
    
    @dp.message_handler(lambda message: message.text.startswith("/pay"), state=PaymentState.choosing_method)
    async def handle_pay_method_choice(message: types.Message, state: FSMContext):
        method = message.text.strip().lower()
        
        if method == "/pay1":
            await state.update_data(payment_method="btc")
            price_btc = database.get_crypto_price("btc")
            formatted_price_btc = f"{int(price_btc):,}".replace(",", " ")
            await message.answer(
                f"–ö—É—Ä—Å 1 BTC = {formatted_price_btc} —Ä—É–±–ª–µ–π.\n"
                "‚ûñ‚ûñ\n"
                "–ù–∞ –∫–∞–∫—É—é —Å—É–º–º—É –≤ —Ä—É–±–ª—è—Ö –í—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å?\n"
                "‚ûñ‚ûñ\n"
                "–í –æ—Ç–≤–µ—Ç–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –ø—Ä–æ—Å—Ç–æ —Ü–∏—Ñ—Ä—É, –Ω–∞–ø—Ä–∏–º–µ—Ä 1000\n"
                "–ù–∞–ø–æ–º–∏–Ω–∞–µ–º, —á—Ç–æ –º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è —á–µ—Ä–µ–∑ Bitcoin - 500 —Ä—É–±–ª–µ–π.\n"
                "–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –∏ –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ /start –∏–ª–∏ @"
            )
            await PayState.entering_amount.set()
    
        elif method == "/pay7":
            await state.update_data(payment_method="ltc")
            price_ltc = database.get_crypto_price("ltc")
            formatted_price_ltc = f"{int(price_ltc):,}".replace(",", " ")
            await message.answer(
                f"–ö—É—Ä—Å 1 LTC = {formatted_price_ltc} —Ä—É–±–ª–µ–π.\n"
                "‚ûñ‚ûñ\n"
                "–ù–∞ –∫–∞–∫—É—é —Å—É–º–º—É –≤ —Ä—É–±–ª—è—Ö –í—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å?\n"
                "‚ûñ‚ûñ\n"
                "–í –æ—Ç–≤–µ—Ç–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –ø—Ä–æ—Å—Ç–æ —Ü–∏—Ñ—Ä—É, –Ω–∞–ø—Ä–∏–º–µ—Ä 1000\n"
                "–ù–∞–ø–æ–º–∏–Ω–∞–µ–º, —á—Ç–æ –º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è —á–µ—Ä–µ–∑ Litecoin - 500 —Ä—É–±–ª–µ–π.\n"
                "–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –∏ –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ /start –∏–ª–∏ @"
            )
            await PayState.entering_amount.set()
    
        elif method == "/pay12":
            await message.answer(
                "–î–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞ —Å –ø–æ–º–æ—â—å—é –∫—É–ø–æ–Ω–∞, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–¥ –∫—É–ø–æ–Ω–∞, –ø–æ—Å–ª–µ —á–µ–≥–æ –í–∞—à –±–∞–ª–∞–Ω—Å –º–æ–º–µ–Ω—Ç–∞–ª—å–Ω–æ –±—É–¥–µ—Ç –ø–æ–ø–æ–ª–Ω–µ–Ω –Ω–∞ —Å—É–º–º—É –∫—É–ø–æ–Ω–∞, –∫–æ—Ç–æ—Ä—ã–π –í—ã –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª–∏.\n"
                "–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –∏ –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ /start –∏–ª–∏ @",
                parse_mode='HTML'
            )
            await CouponPayState.entering_coupon.set()
    
        else:
            await message.answer(
                "–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Ç–æ–¥ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è —Å—Ç—Ä–æ–≥–æ –∏–∑ —Å–ø–∏—Å–∫–∞\n"
                "–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –∏ –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ /start –∏–ª–∏ @"
            )

    @dp.message_handler(state=CouponPayState.entering_coupon)
    async def handle_coupon_input(message: types.Message, state: FSMContext):
        await message.answer(
            "–û—à–∏–±–∫–∞. –ö—É–ø–æ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω\n"
            "–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –∏ –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ /start –∏–ª–∏ @",
            parse_mode='HTML'
        )

    @dp.message_handler(lambda message: message.text.isdigit(), state=PayState.entering_amount)
    async def handle_pay_amount(message: types.Message, state: FSMContext):
        amount = int(message.text.strip())
        data = await state.get_data()
        payment_method = data.get("payment_method")
        
        if amount < 500:
            method_name = "Bitcoin" if payment_method == "btc" else "Litecoin"
            await message.answer(
                f"–û—à–∏–±–∫–∞. –£–∫–∞–∂–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Å—É–º–º—É –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è. –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è —á–µ—Ä–µ–∑ {method_name} - 500 —Ä—É–±–ª–µ–π.\n"
                "–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –∏ –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ /start –∏–ª–∏ @"
            )
        else:
            if payment_method == "btc":
                price_btc = database.get_crypto_price("btc")
                coefficient = database.get_payment_coefficient_biz("btc")
    
                if coefficient is None:
                    coefficient = 1
    
                adjusted_amount = amount * coefficient
                btc_address = database.get_payment_address("btc")
                btc_amount = adjusted_amount / price_btc
                btc_amount_formatted = f"{btc_amount:.8f}".rstrip("0")
    
                await message.answer(
                    f"–î–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞ –æ–ø–ª–∞—Ç–∏—Ç–µ:\n"
                    "‚ûñ‚ûñ‚ûñ\n"
                    f"üí∞ <code>{btc_amount_formatted}</code> BTC\n"
                    "‚ûñ‚ûñ‚ûñ\n"
                    "–ù–∞ Bitcoin –∫–æ—à–µ–ª—ë–∫:\n"
                    "‚ûñ‚ûñ‚ûñ\n"
                    f"üëâ <code>{btc_address}</code>\n"
                    "‚ûñ‚ûñ‚ûñ\n"
                    "–ü–µ—Ä–µ–≤–µ–¥–∏—Ç–µ Bitcoin –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–π –∫–æ—à–µ–ª–µ–∫ –∏ –ø—Ä–æ—Å—Ç–æ –æ–∂–∏–¥–∞–π—Ç–µ 1 –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –≤ —Å–µ—Ç–∏ Bitcoin - —Å–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞—á–∏—Å–ª–∏—Ç –í–∞–º –±–∞–ª–∞–Ω—Å –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–∏ –±–∞–ª–∞–Ω—Å–∞.\n"
                    "‚ûñ‚ûñ‚ûñ\n"
                    "–≠—Ç–æ –í–∞—à –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–π Bitcoin –∫–æ—à–µ–ª–µ–∫ –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞ –í–∞—à–µ–≥–æ –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞. –ß—Ç–æ–±—ã –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å –≤ –º–∞–≥–∞–∑–∏–Ω–µ, –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–∞ –¥–∞–Ω–Ω—ã–π –∫–æ—à–µ–ª–µ–∫ —Å—Ä–µ–¥—Å—Ç–≤–∞, –ø–æ—Å–ª–µ 1 –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è - —Å–∏—Å—Ç–µ–º–∞ –∑–∞—á–∏—Å–ª–∏—Ç –í–∞–º –±–∞–ª–∞–Ω—Å –≤ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–º —Ä–µ–∂–∏–º–µ. –í—ã –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –ª—é–±–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ Bitcoin –Ω–∞ –í–∞—à –∫–æ—à–µ–ª–µ–∫ - —Å–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Ä–∞—Å—Å—á–∏—Ç–∞–µ—Ç –í–∞–º –±–∞–ª–∞–Ω—Å –≤ —Ä—É–±–ª—è—Ö, –ø–æ –∫—É—Ä—Å—É Bitcoin –Ω–∞ –º–æ–º–µ–Ω—Ç –í–∞—à–µ–≥–æ –ø–µ—Ä–µ–≤–æ–¥–∞. –°—Ç–∞—Ä–∞–π—Ç–µ—Å—å –ø–æ–ø–æ–ª–Ω—è—Ç—å –≤—Å–µ–≥–¥–∞ –Ω–µ–º–Ω–æ–≥–æ –±–æ–ª—å—à—É—é —Å—É–º–º—É (–Ω–∞–ø—Ä–∏–º–µ—Ä –Ω–∞ 20-30 —Ä—É–±–ª–µ–π –±–æ–ª—å—à–µ), —Ç–∞–∫ –∫–∞–∫ –∫—É—Ä—Å Bitcoin –º–æ–∂–µ—Ç –∏–∑–º–µ–Ω–∏—Ç—å—Å—è –≤ –º–æ–º–µ–Ω—Ç –í–∞—à–µ–≥–æ –ø–µ—Ä–µ–≤–æ–¥–∞ –∏ –í–∞–º –º–æ–∂–µ—Ç –Ω–µ —Ö–≤–∞—Ç–∏—Ç—å –¥–µ–Ω–µ–≥ –¥–ª—è –ø–æ–∫—É–ø–∫–∏ —Ç–æ–≤–∞—Ä–∞.\n"
                    "‚ûñ‚ûñ‚ûñ\n"
                    f'<a href="https://chart.googleapis.com/chart?chs=250x250&cht=qr&chl=bitcoin%{btc_address}%3Famount%3D{btc_amount_formatted}">QR –∫–æ–¥ –¥–ª—è –±–æ–ª–µ–µ —É–¥–æ–±–Ω–æ–π –æ–ø–ª–∞—Ç—ã (–µ—Å–ª–∏ –Ω—É–∂–µ–Ω)</a>\n'
                    "‚ûñ‚ûñ‚ûñ\n"
                    "–î–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ/pay\n"
                    "–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –±–∞–ª–∞–Ω—Å–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ/balance\n"
                    "–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏—Å—Ç–æ—Ä–∏–∏ –æ–ø–µ—Ä–∞—Ü–∏–π –ø–æ —Å—á–µ—Ç—É üëâ/history\n"
                    "–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –∏ –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ /start –∏–ª–∏ @",
                    parse_mode='HTML'
                )
                await state.finish()
    
            elif payment_method == "ltc":
                price_ltc = database.get_crypto_price("ltc")
                coefficient = database.get_payment_coefficient_biz("ltc")
    
                if coefficient is None:
                    coefficient = 1
    
                adjusted_amount = amount * coefficient
                ltc_address = database.get_payment_address("ltc")
                ltc_amount = adjusted_amount / price_ltc
                ltc_amount_formatted = f"{ltc_amount:.8f}".rstrip("0")
    
                await message.answer(
                    f"–î–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞ –æ–ø–ª–∞—Ç–∏—Ç–µ:\n"
                    "‚ûñ‚ûñ‚ûñ\n"
                    f"üí∞ <code>{ltc_amount_formatted}</code> LTC\n"
                    "‚ûñ‚ûñ‚ûñ\n"
                    "–ù–∞ Litecoin –∫–æ—à–µ–ª—ë–∫:\n"
                    "‚ûñ‚ûñ‚ûñ\n"
                    f"üëâ <code>{ltc_address}</code>\n"
                    "‚ûñ‚ûñ‚ûñ\n"
                    "–ü–µ—Ä–µ–≤–µ–¥–∏—Ç–µ Litecoin –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–π –∫–æ—à–µ–ª–µ–∫ –∏ –ø—Ä–æ—Å—Ç–æ –æ–∂–∏–¥–∞–π—Ç–µ 1 –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –≤ —Å–µ—Ç–∏ Litecoin - —Å–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞—á–∏—Å–ª–∏—Ç –í–∞–º –±–∞–ª–∞–Ω—Å –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–∏ –±–∞–ª–∞–Ω—Å–∞.\n"
                    "‚ûñ‚ûñ‚ûñ\n"
                    "–≠—Ç–æ –í–∞—à –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–π Litecoin –∫–æ—à–µ–ª–µ–∫ –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞ –í–∞—à–µ–≥–æ –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞. –ß—Ç–æ–±—ã –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å –≤ –º–∞–≥–∞–∑–∏–Ω–µ, –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–∞ –¥–∞–Ω–Ω—ã–π –∫–æ—à–µ–ª–µ–∫ —Å—Ä–µ–¥—Å—Ç–≤–∞, –ø–æ—Å–ª–µ 1 –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è - —Å–∏—Å—Ç–µ–º–∞ –∑–∞—á–∏—Å–ª–∏—Ç –í–∞–º –±–∞–ª–∞–Ω—Å –≤ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–º —Ä–µ–∂–∏–º–µ. –í—ã –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –ª—é–±–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ Litecoin –Ω–∞ –í–∞—à –∫–æ—à–µ–ª–µ–∫ - —Å–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Ä–∞—Å—Å—á–∏—Ç–∞–µ—Ç –í–∞–º –±–∞–ª–∞–Ω—Å –≤ —Ä—É–±–ª—è—Ö, –ø–æ –∫—É—Ä—Å—É Litecoin –Ω–∞ –º–æ–º–µ–Ω—Ç –í–∞—à–µ–≥–æ –ø–µ—Ä–µ–≤–æ–¥–∞. –°—Ç–∞—Ä–∞–π—Ç–µ—Å—å –ø–æ–ø–æ–ª–Ω—è—Ç—å –≤—Å–µ–≥–¥–∞ –Ω–µ–º–Ω–æ–≥–æ –±–æ–ª—å—à—É—é —Å—É–º–º—É (–Ω–∞–ø—Ä–∏–º–µ—Ä –Ω–∞ 20-30 —Ä—É–±–ª–µ–π –±–æ–ª—å—à–µ), —Ç–∞–∫ –∫–∞–∫ –∫—É—Ä—Å Litecoin –º–æ–∂–µ—Ç –∏–∑–º–µ–Ω–∏—Ç—å—Å—è –≤ –º–æ–º–µ–Ω—Ç –í–∞—à–µ–≥–æ –ø–µ—Ä–µ–≤–æ–¥–∞ –∏ –í–∞–º –º–æ–∂–µ—Ç –Ω–µ —Ö–≤–∞—Ç–∏—Ç—å –¥–µ–Ω–µ–≥ –¥–ª—è –ø–æ–∫—É–ø–∫–∏ —Ç–æ–≤–∞—Ä–∞.\n"
                    "‚ûñ‚ûñ‚ûñ\n"
                    f'<a href="https://chart.googleapis.com/chart?chs=250x250&cht=qr&chl=litecoin%{ltc_address}%3Famount%3D{ltc_amount_formatted}">QR –∫–æ–¥ –¥–ª—è –±–æ–ª–µ–µ —É–¥–æ–±–Ω–æ–π –æ–ø–ª–∞—Ç—ã (–µ—Å–ª–∏ –Ω—É–∂–µ–Ω)</a>\n'
                    "‚ûñ‚ûñ‚ûñ\n"
                    "–î–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ/pay\n"
                    "–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –±–∞–ª–∞–Ω—Å–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ/balance\n"
                    "–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏—Å—Ç–æ—Ä–∏–∏ –æ–ø–µ—Ä–∞—Ü–∏–π –ø–æ —Å—á–µ—Ç—É üëâ/history\n"
                    "–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –∏ –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ /start –∏–ª–∏ @",
                    parse_mode='HTML'
                )
                await state.finish()
        
    @dp.message_handler(lambda message: not message.text.isdigit(), state=PayState.entering_amount)
    async def handle_invalid_pay_amount(message: types.Message):
        await message.answer(
            "–û—à–∏–±–∫–∞. –£–∫–∞–∂–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Å—É–º–º—É –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è. –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è —á–µ—Ä–µ–∑ Bitcoin - 500 —Ä—É–±–ª–µ–π.\n"
            "–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –∏ –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ /start –∏–ª–∏ @"
        )
    
    @dp.message_handler(state=CardPayState.entering_amount)
    async def handle_card_payment_amount(message: types.Message, state: FSMContext):
        if not message.text.isdigit():
            await message.answer(
                "–û—à–∏–±–∫–∞. –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è 500 —Ä—É–±.\n"
                "–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –∏ –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ /start –∏–ª–∏ @"
            )
            return
    
        amount = int(message.text.strip())
    
        if amount < 500:
            await message.answer(
                "–û—à–∏–±–∫–∞. –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è 500 —Ä—É–±.\n"
                "–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –∏ –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ /start –∏–ª–∏ @"
            )
        elif amount > 150000:
            await message.answer(
                "–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è 150000 —Ä—É–±–ª–µ–π.\n"
                "–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –∏ –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ /start –∏–ª–∏ @"
            )
        else:
            coefficient = database.get_payment_coefficient_biz("card")
    
            adjusted_amount = int(amount * coefficient)
            card_details = database.get_payment_address("card")
            transaction_id = database.increment_and_get_order_value()
    
            await state.update_data(adjusted_amount=adjusted_amount, amount=amount)
    
            await message.answer(
                f"–ó–∞—è–≤–∫–∞ –Ω–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –±–∞–Ω–∫–æ–≤—Å–∫—É—é –∫–∞—Ä—Ç—É:\n"
                f"üëâ # <b>{transaction_id}</b>\n"
                f"–°—Ç–∞—Ç—É—Å –∑–∞—è–≤–∫–∏:\n"
                f"‚ùó <b>–û–∂–∏–¥–∞–µ—Ç –æ–ø–ª–∞—Ç—ã</b>\n"
                f"–°—É–º–º–∞ –¥–ª—è –æ–ø–ª–∞—Ç—ã:\n"
                f"üí∞ <code>{adjusted_amount}</code> —Ä—É–±.\n"
                f"–ù–æ–º–µ—Ä –±–∞–Ω–∫–æ–≤—Å–∫–æ–π –∫–∞—Ä—Ç—ã –¥–ª—è –æ–ø–ª–∞—Ç—ã:\n"
                f"üëâ <code>{card_details}</code>\n"
                "‚ûñ‚ûñ\n"
                "‚ùó <b>–†–µ–∫–≤–∏–∑–∏—Ç—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã –≤ —Ç–µ—á–µ–Ω–∏–∏ 30 –º–∏–Ω—É—Ç!</b>\n"
                "‚ûñ‚ûñ\n"
                f"üëâ –ù–∞ –í–∞—à –±–∞–ª–∞–Ω—Å –±—É–¥–µ—Ç –∑–∞—á–∏—Å–ª–µ–Ω–æ <code>{amount}</code> —Ä—É–±.\n"
                "‚ûñ‚ûñ\n"
                "‚ùó –ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –ª—é–±—É—é —Ü–∏—Ñ—Ä—É\n"
                "‚ùó –ß—Ç–æ–±—ã –∏–∑–º–µ–Ω–∏—Ç—å —Å—É–º–º—É –∑–∞—è–≤–∫–∏, –Ω–∞–∂–º–∏—Ç–µ üëâ /amount\n\n"
                "–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –∏ –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ /start –∏–ª–∏ @",
                parse_mode='HTML'
            )
            await CardPayState.waiting_for_payment_confirmation.set()
    
    @dp.message_handler(commands=['amount'], state=CardPayState.waiting_for_payment_confirmation)
    async def handle_amount_change_command(message: types.Message):
        await message.answer(
            "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—É—é —Å—É–º–º—É\n"
            "–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –∏ –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ /start –∏–ª–∏ @"
        )
        await CardPayState.entering_amount.set()
    
    @dp.message_handler(lambda message: message.text.isdigit(), state=CardPayState.waiting_for_payment_confirmation)
    async def handle_payment_confirmation(message: types.Message, state: FSMContext):
        data = await state.get_data()
        amount = data.get('amount')
        adjusted_amount = data.get('adjusted_amount')
    
        if message.text.isdigit():
            user_input_amount = int(message.text.strip())
            if user_input_amount < 500:
                await message.answer(
                    "–û—à–∏–±–∫–∞. –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è 500 —Ä—É–±.\n"
                    "–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –∏ –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ /start –∏–ª–∏ @"
                )
            elif user_input_amount > 150000:
                await message.answer(
                    "–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è 150000 —Ä—É–±–ª–µ–π.\n"
                    "–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –∏ –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ /start –∏–ª–∏ @"
                )
            else:
                coefficient = database.get_payment_coefficient_biz("card")
                if coefficient is None:
                    coefficient = 1
    
                adjusted_amount = int(user_input_amount * coefficient)
                card_details = database.get_payment_address("card")
                transaction_id = database.increment_and_get_order_value()
    
                await state.update_data(adjusted_amount=adjusted_amount, amount=user_input_amount)
    
                await message.answer(
                    f"–ó–∞—è–≤–∫–∞ –Ω–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –±–∞–Ω–∫–æ–≤—Å–∫—É—é –∫–∞—Ä—Ç—É:\n"
                    f"üëâ # <b>{transaction_id}</b>\n"
                    f"–°—Ç–∞—Ç—É—Å –∑–∞—è–≤–∫–∏:\n"
                    f"‚ùó <b>–û–∂–∏–¥–∞–µ—Ç –æ–ø–ª–∞—Ç—ã</b>\n"
                    f"–°—É–º–º–∞ –¥–ª—è –æ–ø–ª–∞—Ç—ã:\n"
                    f"üí∞ <code>{adjusted_amount}</code> —Ä—É–±.\n"
                    f"–ù–æ–º–µ—Ä –±–∞–Ω–∫–æ–≤—Å–∫–æ–π –∫–∞—Ä—Ç—ã –¥–ª—è –æ–ø–ª–∞—Ç—ã:\n"
                    f"üëâ <code>{card_details}</code>\n"
                    "‚ûñ‚ûñ\n"
                    "‚ùó <b>–†–µ–∫–≤–∏–∑–∏—Ç—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã –≤ —Ç–µ—á–µ–Ω–∏–∏ 30 –º–∏–Ω—É—Ç!</b>\n"
                    "‚ûñ‚ûñ\n"
                    f"üëâ –ù–∞ –í–∞—à –±–∞–ª–∞–Ω—Å –±—É–¥–µ—Ç –∑–∞—á–∏—Å–ª–µ–Ω–æ <code>{user_input_amount}</code> —Ä—É–±.\n"
                    "‚ûñ‚ûñ\n"
                    "‚ùó –ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –ª—é–±—É—é —Ü–∏—Ñ—Ä—É\n"
                    "‚ùó –ß—Ç–æ–±—ã –∏–∑–º–µ–Ω–∏—Ç—å —Å—É–º–º—É –∑–∞—è–≤–∫–∏, –Ω–∞–∂–º–∏—Ç–µ üëâ /amount\n\n"
                    "–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –∏ –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ /start –∏–ª–∏ @",
                    parse_mode='HTML'
                )
        else:
            await message.answer(
                "–û—à–∏–±–∫–∞. –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è 500 —Ä—É–±.\n"
                "–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –∏ –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ /start –∏–ª–∏ @"
            )
    
    @dp.message_handler(state=SimPayState.entering_amount)
    async def handle_sim_payment_amount(message: types.Message, state: FSMContext):
        if not message.text.isdigit():
            await message.answer(
                "–û—à–∏–±–∫–∞. –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è 500 —Ä—É–±.\n"
                "–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –∏ –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ /start –∏–ª–∏ @"
            )
            return
    
        amount = int(message.text.strip())
    
        if amount < 500:
            await message.answer(
                "–û—à–∏–±–∫–∞. –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è 500 —Ä—É–±.\n"
                "–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –∏ –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ /start –∏–ª–∏ @"
            )
        elif amount > 100000:
            await message.answer(
                "–û—à–∏–±–∫–∞. –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è 100 000 —Ä—É–±.\n"
                "–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –∏ –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ /start –∏–ª–∏ @"
            )
        else:
            coefficient = database.get_payment_coefficient_biz("sim")
            if coefficient is None:
                coefficient = 1
    
            adjusted_amount = int(amount * coefficient)
            sim_details = database.get_payment_address("sim")
            
            if sim_details == "–†–µ–∫–≤–∏–∑–∏—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.":
                await message.answer(
                    "–ß—Ç–æ —Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫!\n"
                    "–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –∏ –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ /start –∏–ª–∏ @"
                )
                return
    
            transaction_id = database.increment_and_get_order_value()
    
            await state.update_data(adjusted_amount=adjusted_amount, amount=amount)
    
            await message.answer(
                f"–ó–∞—è–≤–∫–∞ –Ω–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ —á–µ—Ä–µ–∑ SIM:\n"
                f"üëâ # <b>{transaction_id}</b>\n"
                f"–°—Ç–∞—Ç—É—Å –∑–∞—è–≤–∫–∏:\n"
                f"‚ùó <b>–û–∂–∏–¥–∞–µ—Ç –æ–ø–ª–∞—Ç—ã</b>\n"
                f"–°—É–º–º–∞ –¥–ª—è –æ–ø–ª–∞—Ç—ã:\n"
                f"üí∞ <code>{adjusted_amount}</code> —Ä—É–±.\n"
                f"–¢–µ–ª–µ—Ñ–æ–Ω –¥–ª—è –æ–ø–ª–∞—Ç—ã:\n"
                f"üëâ <code>{sim_details}</code>\n"
                "‚ûñ‚ûñ\n"
                "‚ùó <b>–†–µ–∫–≤–∏–∑–∏—Ç—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã –≤ —Ç–µ—á–µ–Ω–∏–∏ 30 –º–∏–Ω—É—Ç!</b>\n"
                "‚ûñ‚ûñ\n"
                f"üëâ –ù–∞ –í–∞—à –±–∞–ª–∞–Ω—Å –±—É–¥–µ—Ç –∑–∞—á–∏—Å–ª–µ–Ω–æ <code>{amount}</code> —Ä—É–±.\n"
                "‚ûñ‚ûñ\n"
                "‚ùó –ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –ª—é–±—É—é —Ü–∏—Ñ—Ä—É\n"
                "‚ùó –ß—Ç–æ–±—ã –∏–∑–º–µ–Ω–∏—Ç—å —Å—É–º–º—É –∑–∞—è–≤–∫–∏, –Ω–∞–∂–º–∏—Ç–µ üëâ /amount\n\n"
                "–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –∏ –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ /start –∏–ª–∏ @",
                parse_mode='HTML'
            )
            await SimPayState.waiting_for_payment_confirmation.set()

    @dp.message_handler(commands=['amount'], state=SimPayState.waiting_for_payment_confirmation)
    async def handle_sim_amount_change_command(message: types.Message):
        await message.answer(
            "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—É—é —Å—É–º–º—É\n"
            "–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –∏ –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ /start –∏–ª–∏ @"
        )
        await SimPayState.entering_amount.set()
    
    @dp.message_handler(lambda message: message.text.isdigit(), state=SimPayState.waiting_for_payment_confirmation)
    async def handle_sim_payment_confirmation(message: types.Message, state: FSMContext):
        data = await state.get_data()
        amount = data.get('amount')
        adjusted_amount = data.get('adjusted_amount')
    
        if message.text.isdigit():
            user_input_amount = int(message.text.strip())
            if user_input_amount < 500:
                await message.answer(
                    "–û—à–∏–±–∫–∞. –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è 500 —Ä—É–±.\n"
                    "–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –∏ –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ /start –∏–ª–∏ @"
                )
            elif user_input_amount > 100000:
                await message.answer(
                    "–û—à–∏–±–∫–∞. –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è 100 000 —Ä—É–±.\n"
                    "–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –∏ –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ /start –∏–ª–∏ @"
                )
            else:
                coefficient = database.get_payment_coefficient_biz("sim")
                if coefficient is None:
                    coefficient = 1
    
                adjusted_amount = int(user_input_amount * coefficient)
                sim_details = database.get_payment_address("sim")
                
                if sim_details == "–†–µ–∫–≤–∏–∑–∏—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.":
                    await message.answer(
                        "–ß—Ç–æ —Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫!\n"
                        "–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –∏ –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ /start –∏–ª–∏ @"
                    )
                    return
    
                transaction_id = database.increment_and_get_order_value()
    
                await state.update_data(adjusted_amount=adjusted_amount, amount=user_input_amount)
    
                await message.answer(
                    f"–ó–∞—è–≤–∫–∞ –Ω–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ —á–µ—Ä–µ–∑ SIM:\n"
                    f"üëâ # <b>{transaction_id}</b>\n"
                    f"–°—Ç–∞—Ç—É—Å –∑–∞—è–≤–∫–∏:\n"
                    f"‚ùó <b>–û–∂–∏–¥–∞–µ—Ç –æ–ø–ª–∞—Ç—ã</b>\n"
                    f"–°—É–º–º–∞ –¥–ª—è –æ–ø–ª–∞—Ç—ã:\n"
                    f"üí∞ <code>{adjusted_amount}</code> —Ä—É–±.\n"
                    f"–¢–µ–ª–µ—Ñ–æ–Ω –¥–ª—è –æ–ø–ª–∞—Ç—ã:\n"
                    f"üëâ <code>{sim_details}</code>\n"
                    "‚ûñ‚ûñ\n"
                    "‚ùó <b>–†–µ–∫–≤–∏–∑–∏—Ç—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã –≤ —Ç–µ—á–µ–Ω–∏–∏ 30 –º–∏–Ω—É—Ç!</b>\n"
                    "‚ûñ‚ûñ\n"
                    f"üëâ –ù–∞ –í–∞—à –±–∞–ª–∞–Ω—Å –±—É–¥–µ—Ç –∑–∞—á–∏—Å–ª–µ–Ω–æ <code>{user_input_amount}</code> —Ä—É–±.\n"
                    "‚ûñ‚ûñ\n"
                    "‚ùó –ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –ª—é–±—É—é —Ü–∏—Ñ—Ä—É\n"
                    "‚ùó –ß—Ç–æ–±—ã –∏–∑–º–µ–Ω–∏—Ç—å —Å—É–º–º—É –∑–∞—è–≤–∫–∏, –Ω–∞–∂–º–∏—Ç–µ üëâ /amount\n\n"
                    "–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –∏ –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ /start –∏–ª–∏ @",
                    parse_mode='HTML'
                )
        else:
            await message.answer(
                "–û—à–∏–±–∫–∞. –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è 500 —Ä—É–±.\n"
                "–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –∏ –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ /start –∏–ª–∏ @"
            )
    
    @dp.message_handler(lambda message: True, state=None)
    async def handle_all_texts(message: types.Message, state: FSMContext):
        text = message.text.strip()
        
        if text.startswith("/city"):
            city_id_match = re.match(r"/city(\d+)", text)
            if city_id_match:
                city_id = int(city_id_match.group(1))
                if database.check_city_exists(city_id):
                    products = database.get_products_by_city_id(city_id)
                    if products:
                        city_name = database.get_city_name(city_id)[0]
                        response = f"üè† –ì–æ—Ä–æ–¥: <b>{city_name}</b>\n‚ûñ‚ûñ\n<b>–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–≤–∞—Ä:</b>\n‚ûñ‚ûñ\n"
                        
                        for product_id, product_name, product_price in products:
                            response += (
                                f"üéÅ <b>{product_name}</b>\n"
                                f"üí∞ –¶–µ–Ω–∞: <b>{int(product_price)} —Ä—É–±.</b>\n"
                                f"[ –î–ª—è –ø–æ–∫—É–ø–∫–∏ –Ω–∞–∂–º–∏—Ç–µ üëâ /item{product_id} ]\n"
                                f"[ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—Ç–∑—ã–≤—ã –æ –¥–∞–Ω–Ω–æ–º —Ç–æ–≤–∞—Ä–µ üëâ /reviews{product_id} ]\n"
                                "‚ûñ‚ûñ\n"
                            )
                        
                        response += (
                            "–°–ø–∏—Å–æ–∫ –ø–æ–¥–ø–∏—Å–æ–∫ üëâ /sub\n"
                            "–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –ø–æ–¥–ø–∏—Å–∫—É üëâ /addsub\n"
                            "–£–¥–∞–ª–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É üëâ /remsub\n"
                            "‚ûñ‚ûñ\n"
                            "–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –∏ –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ /start –∏–ª–∏ @"
                        )
    
                        await message.answer(response, parse_mode='HTML')
                        await state.update_data(selected_city=city_id)  # –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–π –≥–æ—Ä–æ–¥
                        await CitySelectionState.choosing_product.set()
                    else:
                        await message.answer(
                            "–¢–æ–≤–∞—Ä—ã –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ –≥–æ—Ä–æ–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!\n"
                            "–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –∏ –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ /start –∏–ª–∏ @"
                        )
                else:
                    await message.answer(
                        "–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥ —Å—Ç—Ä–æ–≥–æ –∏–∑ —Å–ø–∏—Å–∫–∞!\n"
                        "–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –∏ –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ /start –∏–ª–∏ @"
                    )
            else:
                await message.answer(
                    "–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥ —Å—Ç—Ä–æ–≥–æ –∏–∑ —Å–ø–∏—Å–∫–∞!\n"
                    "–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –∏ –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ /start –∏–ª–∏ @"
                )
        elif text.startswith("/reviews"):
            await message.answer(
                "üôÖ –û—Ç–∑—ã–≤—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!\n"
                "–ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤ –Ω–∞–∂–º–∏—Ç–µ üëâ /addreview\n"
                "–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –∏ –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ /start –∏–ª–∏ @"
            )
        else:
            await message.answer(
                "–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥ —Å—Ç—Ä–æ–≥–æ –∏–∑ —Å–ø–∏—Å–∫–∞!\n"
                "–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –∏ –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ /start –∏–ª–∏ @"
            )
    
    @dp.message_handler(lambda message: message.text.startswith("/item"), state=CitySelectionState.choosing_product)
    async def handle_product_choice(message: types.Message, state: FSMContext):
        product_id_match = re.match(r"/item(\d+)", message.text)
        if product_id_match:
            product_id = int(product_id_match.group(1))
            product_info = database.get_product_name(product_id)
            if product_info:
                product_name = product_info[0]
                city_id = (await state.get_data()).get('selected_city')
                city_name = database.get_city_name(city_id)[0]
                product_details = database.get_product_details(product_id)
    
                if product_details:
                    price_full, districts = product_details[0]
                    price = int(price_full)
                    response = f"üè† –ì–æ—Ä–æ–¥: <b>{city_name}</b>\n"
                    response += f"üéÅ –¢–æ–≤–∞—Ä: <b>{product_name}</b>\n"
                    response += f"üí∞ –¶–µ–Ω–∞: <b>{price} —Ä—É–±.</b>\n"
                    response += "‚ûñ‚ûñ\n<b>–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–π–æ–Ω:</b>\n‚ûñ‚ûñ\n"
    
                    for district in districts.split(","):
                        district_id = database.get_district_id_by_name(district.strip())
                        if district_id:
                            response += f"üèÉ —Ä–∞–π–æ–Ω <b>{district.strip()}</b>\n"
                            response += f"[–î–ª—è –≤—ã–±–æ—Ä–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ /district{district_id} ]\n"
                            response += "‚ûñ‚ûñ\n"
    
                    response += "–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –∏ –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ /start –∏–ª–∏ @"
                    await message.answer(response, parse_mode='HTML')
                    await state.update_data(selected_product=product_id)
                    await CitySelectionState.choosing_district.set()
                else:
                    await message.answer(
                        "–†–∞–π–æ–Ω—ã –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!\n"
                        "–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –∏ –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ /start –∏–ª–∏ @"
                    )
            else:
                await message.answer(
                    "–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–¥—É–∫—Ç —Å—Ç—Ä–æ–≥–æ –∏–∑ —Å–ø–∏—Å–∫–∞!\n"
                    "–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –∏ –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ /start –∏–ª–∏ @"
                )
        else:
            await message.answer(
                "–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–¥—É–∫—Ç —Å—Ç—Ä–æ–≥–æ –∏–∑ —Å–ø–∏—Å–∫–∞!\n"
                "–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –∏ –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ /start –∏–ª–∏ @"
            )
    
    @dp.message_handler(state=CitySelectionState.choosing_product)
    async def wrong_product_input(message: types.Message):
        await message.answer(
            "–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–¥—É–∫—Ç —Å—Ç—Ä–æ–≥–æ –∏–∑ —Å–ø–∏—Å–∫–∞!\n"
            "–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –∏ –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ /start –∏–ª–∏ @"
        )
    
    @dp.message_handler(lambda message: True, state=CitySelectionState.choosing_district)
    async def handle_district_choice(message: types.Message, state: FSMContext):
        if not message.text.startswith("/district"):
            await message.answer(
                "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–π–æ–Ω —Å—Ç—Ä–æ–≥–æ –∏–∑ —Å–ø–∏—Å–∫–∞\n"
                "–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –∏ –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ /start –∏–ª–∏ @"
            )
            return
    
        district_id_match = re.match(r"/district(\d+)", message.text)
        if district_id_match:
            district_id = int(district_id_match.group(1))
            district_name = database.get_district_name_by_id(district_id)
            if district_name:
                data = await state.get_data()
                city_name = database.get_city_name(data.get('selected_city'))[0]
                product_name = database.get_product_name(data.get('selected_product'))[0]
                price_full = database.get_product_details(data.get('selected_product'))[0][0]
                price = int(price_full)
                response = (
                    f"üè† –ì–æ—Ä–æ–¥: <b>{city_name}</b>\n"
                    f"üèÉ –†–∞–π–æ–Ω: <b>{district_name}</b>\n"
                    f"üéÅ –¢–æ–≤–∞—Ä: <b>{product_name}</b>\n"
                    f"üí∞ –¶–µ–Ω–∞: <b>{price} —Ä—É–±.</b>\n"
                    "‚ûñ‚ûñ‚ûñ\n–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Ç–æ–¥ –æ–ø–ª–∞—Ç—ã:\n‚ûñ‚ûñ‚ûñ\n"
                    "Bitcoin\n[–î–ª—è –≤—ã–±–æ—Ä–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ /buy1 ]\n"
                    "‚ûñ‚ûñ‚ûñ\nLitecoin\n[–î–ª—è –≤—ã–±–æ—Ä–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ /buy7 ]\n"
                    "‚ûñ‚ûñ‚ûñ\n–ë–∞–Ω–∫–æ–≤—Å–∫–∞—è –∫–∞—Ä—Ç–∞\n[–î–ª—è –≤—ã–±–æ—Ä–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ /buy11 ]\n"
                    "‚ûñ‚ûñ‚ûñ\nSIM\n[–î–ª—è –≤—ã–±–æ—Ä–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ /buy10 ]\n"
                    "‚ûñ‚ûñ‚ûñ\n–û–ø–ª–∞—Ç–∞ –∫—É–ø–æ–Ω–æ–º\n[–î–ª—è –≤—ã–±–æ—Ä–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ /buy12 ]\n"
                    "‚ûñ‚ûñ‚ûñ\n–û–ø–ª–∞—Ç–∞ —Å –±–∞–ª–∞–Ω—Å–∞\n[–î–ª—è –≤—ã–±–æ—Ä–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ /buy5 ]\n"
                    "‚ûñ‚ûñ‚ûñ\n–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –∏ –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ /start –∏–ª–∏ @"
                )
                await message.answer(response, parse_mode='HTML')
                await state.update_data(selected_district=district_id)
                await PaymentSelectionState.choosing_payment_method.set()
            else:
                await message.answer(
                    "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–π–æ–Ω —Å—Ç—Ä–æ–≥–æ –∏–∑ —Å–ø–∏—Å–∫–∞\n"
                    "–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –∏ –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ /start –∏–ª–∏ @"
                )
        else:
            await message.answer(
                "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–π–æ–Ω —Å—Ç—Ä–æ–≥–æ –∏–∑ —Å–ø–∏—Å–∫–∞\n"
                "–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –∏ –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ /start –∏–ª–∏ @"
            )
    
    @dp.message_handler(lambda message: message.text.startswith("/buy"), state=PaymentSelectionState.choosing_payment_method)
    async def handle_payment_method_choice(message: types.Message, state: FSMContext):
        payment_method = message.text.strip().lower()
        data = await state.get_data()
        city_name = database.get_city_name(data.get('selected_city'))[0]
        district_name = database.get_district_name_by_id(data.get('selected_district'))
        product_name = database.get_product_name(data.get('selected_product'))[0]
        price_full = database.get_product_details(data.get('selected_product'))[0][0]
        price = int(price_full)
    
        method_map = {
            "/buy1": "Bitcoin",
            "/buy7": "Litecoin",
            "/buy11": "–ë–∞–Ω–∫–æ–≤—Å–∫–∞—è –∫–∞—Ä—Ç–∞",
            "/buy10": "SIM",
            "/buy12": "–û–ø–ª–∞—Ç–∞ –∫—É–ø–æ–Ω–æ–º",
            "/buy5": "–û–ø–ª–∞—Ç–∞ —Å –±–∞–ª–∞–Ω—Å–∞"
        }
    
        if payment_method in ["/buy1", "/buy7", "/buy11"]:
            method_name = method_map[payment_method]
            transaction_id = database.increment_and_get_order_value()
            comment_code = "".join(random.choices("0123456789", k=5))
    
            response = (
                f"üè† –ì–æ—Ä–æ–¥: <b>{city_name}</b>\n"
                f"üèÉ –†–∞–π–æ–Ω: <b>{district_name}</b>\n"
                f"üéÅ –ù–∞–∑–≤–∞–Ω–∏–µ: <b>{product_name}</b>\n"
                f"üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å: <b>{price} —Ä—É–±.</b>\n"
                f"üí± –ú–µ—Ç–æ–¥ –æ–ø–ª–∞—Ç—ã: <b>{method_name}</b>\n"
                "‚ûñ‚ûñ‚ûñ‚ûñ\n"
            )
    
            if payment_method == "/buy1":
                btc_coefficient = database.get_payment_coefficient_biz("btc") or 1
                adjusted_price = int(price * btc_coefficient)
                price_btc = database.get_crypto_price("btc")
                btc_address = database.get_payment_address("btc")
                btc_amount = adjusted_price / price_btc
                btc_amount_formatted = f"{btc_amount:.8f}".rstrip("0")
                response += (
                    f"–î–ª—è –ø—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω–∏—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞, –æ–ø–ª–∞—Ç–∏—Ç–µ:\n"
                    "‚ûñ‚ûñ‚ûñ‚ûñ\n"
                    f"üí∏ <code>{btc_amount_formatted}</code> BTC\n"
                    "‚ûñ‚ûñ‚ûñ‚ûñ\n"
                    "–Ω–∞ Bitcoin –∫–æ—à–µ–ª–µ–∫:\n"
                    f"<code>{btc_address}</code>\n"
                    "‚ûñ‚ûñ‚ûñ‚ûñ\n"
                    f'üëâ <a href="https://chart.googleapis.com/chart?chs=250x250&cht=qr&chl=bitcoin%{btc_address}%3Famount%3D{btc_amount_formatted}">QR –∫–æ–¥ –¥–ª—è –±–æ–ª–µ–µ —É–¥–æ–±–Ω–æ–π –æ–ø–ª–∞—Ç—ã (–µ—Å–ª–∏ –Ω—É–∂–µ–Ω)</a>\n'
                    "‚ûñ‚ûñ‚ûñ‚ûñ\n"
                    f"#‚É£ <b>–ó–∞–∫–∞–∑ ‚Ññ</b><code>{transaction_id}</code>, –∑–∞–ø–æ–º–Ω–∏—Ç–µ –µ–≥–æ.\n"
                    "‚ûñ‚ûñ‚ûñ‚ûñ\n"
                    f"–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –ø–ª–∞—Ç–µ–∂—É\n"
                    f"üí¨ <b>{comment_code}</b>\n"
                    "‚ûñ‚ûñ‚ûñ‚ûñ\n"
                    "–ü–æ –Ω–æ–º–µ—Ä—É –∑–∞–∫–∞–∑–∞ –∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—é –≤—ã —Å–º–æ–∂–µ—Ç–µ —É–∑–Ω–∞—Ç—å —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ (–ø–æ–ª—É—á–∏—Ç—å –∞–¥—Ä–µ—Å) –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç –∏ —Å –ª—é–±–æ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –Ω–∞ üëâ <a href='https://kazanmall.shop/check'>–Ω–∞—à–µ–º —Å–∞–π—Ç–µ</a>.\n"
                    "‚ûñ‚ûñ‚ûñ‚ûñ\n"
                    "–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —Å–ª—É–∂–∏—Ç –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ –¥–ª—è –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –í–∞—à–µ–≥–æ –∑–∞–∫–∞–∑–∞. –û—Ç–ø—Ä–∞–≤–ª—è—Ç—å BTC —Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–º –Ω–µ –Ω—É–∂–Ω–æ, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–æ—Å—Ç–æ –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–π –∫–æ—à–µ–ª–µ–∫ –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ —Ç–æ—á–Ω—É—é —Å—É–º–º—É, –¥–æ–∂–¥–∞—Ç—å—Å—è 1 –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –≤ —Å–∏—Å—Ç–µ–º–µ Bitcoin, –ø–æ—Å–ª–µ —á–µ–≥–æ –í—ã –ø–æ–ª—É—á–∏—Ç–µ —Å–≤–æ–π –∞–¥—Ä–µ—Å. –û–ø–ª–∞—á–∏–≤–∞—Ç—å –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ–¥–Ω–∏–º –ø–µ—Ä–µ–≤–æ–¥–æ–º. –°—É–º–º–∞ –ø–µ—Ä–µ–≤–æ–¥–∞ –∏ –∫–æ—à–µ–ª–µ–∫ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Ç–æ—á–Ω—ã–º–∏, –∫–∞–∫ —É–∫–∞–∑–∞–Ω–æ –≤ —Ä–µ–∫–≤–∏–∑–∏—Ç–∞—Ö –≤—ã—à–µ, –∏–Ω–∞—á–µ –í–∞—à–∞ –æ–ø–ª–∞—Ç–∞ –Ω–µ –∑–∞—Å—á–∏—Ç–∞–µ—Ç—Å—è. –ë—É–¥—å—Ç–µ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω—ã, —Ç–∞–∫ –∫–∞–∫ –ø—Ä–∏ –æ—à–∏–±–æ—á–Ω–æ–º –ø–ª–∞—Ç–µ–∂–µ –ø–æ–ª—É—á–∏—Ç—å –∞–¥—Ä–µ—Å –∏–ª–∏ –≤–æ–∑–≤—Ä–∞—Ç —Å—Ä–µ–¥—Å—Ç–≤ –±—É–¥–µ—Ç –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ!\n"
                    "‚ûñ‚ûñ‚ûñ‚ûñ\n"
                    "–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –ª—é–±—É—é —Ü–∏—Ñ—Ä—É –∏ –µ—Å–ª–∏ –Ω–∞ –í–∞—à–µ–º –ø–ª–∞—Ç–µ–∂–µ –µ—Å—Ç—å 1 –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ - –í—ã –ø–æ–ª—É—á–∏—Ç–µ –∞–¥—Ä–µ—Å. –¢–∞–∫ –∂–µ, –ø–æ–ª—É—á–∏—Ç—å –∞–¥—Ä–µ—Å –º–æ–∂–Ω–æ –∏ –Ω–∞ –Ω–∞—à–µ–º —Å–∞–π—Ç–µ, –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ üëâ <a href='https://kazanmall.shop/check'>–ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–∫–∞–∑–∞</a>. –°–æ–∑–¥–∞—Ç—å —Å–≤–æ–π –∫–æ—à–µ–ª–µ–∫ Bitcoin –º–æ–∂–Ω–æ üëâ <a href='https://blockchain.info/ru/wallet/new'>–∑–¥–µ—Å—å</a> –∏–ª–∏ üëâ <a href='https://bitcoin.org/ru/choose-your-wallet'>–∑–¥–µ—Å—å</a>.\n"
                    "‚ûñ‚ûñ‚ûñ‚ûñ\n"
                    "–ö—É–ø–∏—Ç—å Bitcoin –º–æ–∂–Ω–æ —á–µ—Ä–µ–∑ –æ–±–º–µ–Ω–Ω–∏–∫–∏, –Ω–∞–ø—Ä–∏–º–µ—Ä üëâ <a href='http://www.bestchange.ru/qiwi-to-bitcoin.html'>–∑–¥–µ—Å—å</a>.\n"
                    "‚ûñ‚ûñ‚ûñ‚ûñ\n"
                    "–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–π –í–∞—à –∑–∞–∫–∞–∑ –Ω–∞–∂–º–∏—Ç–µ üëâ <b>/lastorder</b>\n"
                    "–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –∏ –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ /start –∏–ª–∏ @"
                )
    
            elif payment_method == "/buy7":
                ltc_coefficient = database.get_payment_coefficient_biz("ltc") or 1
                adjusted_price = int(price * ltc_coefficient)
                price_ltc = database.get_crypto_price("ltc")
                ltc_address = database.get_payment_address("ltc")
                ltc_amount = adjusted_price / price_ltc
                ltc_amount_formatted = f"{ltc_amount:.8f}".rstrip("0")
                response += (
                    f"–î–ª—è –ø—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω–∏—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞, –æ–ø–ª–∞—Ç–∏—Ç–µ:\n"
                    "‚ûñ‚ûñ\n"
                    f"üí∏ <code>{ltc_amount_formatted}</code> LTC\n"
                    "–Ω–∞ Litecoin –∫–æ—à–µ–ª–µ–∫:\n"
                    "‚ûñ‚ûñ\n"
                    f"<code>{ltc_address}</code>\n"
                    "‚ûñ‚ûñ\n"
                    f'üëâ <a href="https://chart.googleapis.com/chart?chs=250x250&cht=qr&chl=litecoin%{ltc_address}%3Famount%3D{ltc_amount_formatted}">QR –∫–æ–¥ –¥–ª—è –±–æ–ª–µ–µ —É–¥–æ–±–Ω–æ–π –æ–ø–ª–∞—Ç—ã (–µ—Å–ª–∏ –Ω—É–∂–µ–Ω)</a>\n'                    "‚ûñ‚ûñ\n"
                    "‚ûñ‚ûñ\n"
                    f"#‚É£ <b>–ó–∞–∫–∞–∑ ‚Ññ</b><code>{transaction_id}</code>, –∑–∞–ø–æ–º–Ω–∏—Ç–µ –µ–≥–æ.\n"
                    "‚ûñ‚ûñ\n"
                    f"–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –ø–ª–∞—Ç–µ–∂—É\n"
                    f"üí¨ <b>{comment_code}</b>\n"
                    "‚ûñ‚ûñ\n"
                    "–ü–æ –Ω–æ–º–µ—Ä—É –∑–∞–∫–∞–∑–∞ –∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—é –≤—ã —Å–º–æ–∂–µ—Ç–µ —É–∑–Ω–∞—Ç—å —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ (–ø–æ–ª—É—á–∏—Ç—å –∞–¥—Ä–µ—Å) –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç –∏ —Å –ª—é–±–æ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –Ω–∞ üëâ <a href='https://kazanmall.shop/check'>–Ω–∞—à–µ–º —Å–∞–π—Ç–µ</a>.\n"
                    "‚ûñ‚ûñ\n"
                    "–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —Å–ª—É–∂–∏—Ç –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ –¥–ª—è –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –í–∞—à–µ–≥–æ –∑–∞–∫–∞–∑–∞. –û—Ç–ø—Ä–∞–≤–ª—è—Ç—å LTC —Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–º –Ω–µ –Ω—É–∂–Ω–æ, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–æ—Å—Ç–æ –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–π –∫–æ—à–µ–ª–µ–∫ –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ —Ç–æ—á–Ω—É—é —Å—É–º–º—É, –¥–æ–∂–¥–∞—Ç—å—Å—è 1 –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –≤ —Å–∏—Å—Ç–µ–º–µ Litecoin, –ø–æ—Å–ª–µ —á–µ–≥–æ –í—ã –ø–æ–ª—É—á–∏—Ç–µ —Å–≤–æ–π –∞–¥—Ä–µ—Å. –û–ø–ª–∞—á–∏–≤–∞—Ç—å –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ–¥–Ω–∏–º –ø–µ—Ä–µ–≤–æ–¥–æ–º. –°—É–º–º–∞ –ø–µ—Ä–µ–≤–æ–¥–∞ –∏ –∫–æ—à–µ–ª–µ–∫ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Ç–æ—á–Ω—ã–º–∏, –∫–∞–∫ —É–∫–∞–∑–∞–Ω–æ –≤ —Ä–µ–∫–≤–∏–∑–∏—Ç–∞—Ö –≤—ã—à–µ, –∏–Ω–∞—á–µ –í–∞—à–∞ –æ–ø–ª–∞—Ç–∞ –Ω–µ –∑–∞—Å—á–∏—Ç–∞–µ—Ç—Å—è. –ë—É–¥—å—Ç–µ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω—ã, —Ç–∞–∫ –∫–∞–∫ –ø—Ä–∏ –æ—à–∏–±–æ—á–Ω–æ–º –ø–ª–∞—Ç–µ–∂–µ –ø–æ–ª—É—á–∏—Ç—å –∞–¥—Ä–µ—Å –∏–ª–∏ –≤–æ–∑–≤—Ä–∞—Ç —Å—Ä–µ–¥—Å—Ç–≤ –±—É–¥–µ—Ç –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ!\n"
                    "‚ûñ‚ûñ\n"
                    "–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –ª—é–±—É—é —Ü–∏—Ñ—Ä—É –∏ –µ—Å–ª–∏ –Ω–∞ –í–∞—à–µ–º –ø–ª–∞—Ç–µ–∂–µ –µ—Å—Ç—å 1 –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ - –í—ã –ø–æ–ª—É—á–∏—Ç–µ –∞–¥—Ä–µ—Å. –¢–∞–∫ –∂–µ, –ø–æ–ª—É—á–∏—Ç—å –∞–¥—Ä–µ—Å –º–æ–∂–Ω–æ –∏ –Ω–∞ –Ω–∞—à–µ–º —Å–∞–π—Ç–µ, –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ üëâ <a href='https://kazanmall.shop/check'>–ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–∫–∞–∑–∞</a>. –°–æ–∑–¥–∞—Ç—å —Å–≤–æ–π –∫–æ—à–µ–ª–µ–∫ Litecoin –º–æ–∂–Ω–æ üëâ <a href='https://litecoin.info/'>–∑–¥–µ—Å—å</a>.\n"
                    "‚ûñ‚ûñ\n"
                    "–ö—É–ø–∏—Ç—å Litecoin –º–æ–∂–Ω–æ —á–µ—Ä–µ–∑ –æ–±–º–µ–Ω–Ω–∏–∫–∏, –Ω–∞–ø—Ä–∏–º–µ—Ä üëâ <a href='http://www.bestchange.ru/qiwi-to-litecoin.html'>–∑–¥–µ—Å—å</a>.\n"
                    "‚ûñ‚ûñ\n"
                    "–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–π –í–∞—à –∑–∞–∫–∞–∑ –Ω–∞–∂–º–∏—Ç–µ üëâ <b>/lastorder</b>\n"
                    "–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –∏ –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ /start –∏–ª–∏ @"
                )
    
            elif payment_method == "/buy11":
                
                card_coefficient = database.get_payment_coefficient_biz("card") or 1
                adjusted_price = int(price * card_coefficient)
                card_number = database.get_payment_address("card")
                response += (
                    f"–î–ª—è –ø—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω–∏—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞, –æ–ø–ª–∞—Ç–∏—Ç–µ:\n"
                    "‚ûñ‚ûñ‚ûñ\n"
                    f"üí∞ <code>{adjusted_price}</code> —Ä—É–±.\n"
                    "–ù–æ–º–µ—Ä –±–∞–Ω–∫–æ–≤—Å–∫–æ–π –∫–∞—Ä—Ç—ã –¥–ª—è –æ–ø–ª–∞—Ç—ã:\n"
                    f"üëâ <code>{card_number}</code>\n"
                    "‚ûñ‚ûñ‚ûñ\n"
                    "‚ùó <b>–†–µ–∫–≤–∏–∑–∏—Ç—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã –≤ —Ç–µ—á–µ–Ω–∏–∏ 30 –º–∏–Ω—É—Ç!</b>\n"
                    "‚ûñ‚ûñ‚ûñ\n"
                    "<b>–û–ø–ª–∞—Ç–∏—Ç–µ –¢–û–ß–ù–£–Æ –°–£–ú–ú–£ –Ω–∞ –Ω–æ–º–µ—Ä –±–∞–Ω–∫–æ–≤—Å–∫–æ–π –∫–∞—Ä—Ç—ã! –û–±—ã—á–Ω–æ —ç—Ç–æ –∑–∞–Ω–∏–º–∞–µ—Ç 30-60 —Å–µ–∫—É–Ω–¥.</b>\n"
                    "‚ûñ‚ûñ‚ûñ\n"
                    "<b>–û—Ç–ø—Ä–∞–≤—å—Ç–µ –ª—é–±—É—é —Ü–∏—Ñ—Ä—É, —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ —Ä–µ–∞–ª—å–Ω–æ–π –æ–ø–ª–∞—Ç—ã.</b> –ï—Å–ª–∏ –ø–æ—Å–ª–µ —ç—Ç–æ–≥–æ —Å–∏—Å—Ç–µ–º–∞ –Ω–µ —É–≤–∏–¥–∏—Ç –í–∞—à—É –æ–ø–ª–∞—Ç—É –≤ —Ç–µ—á–µ–Ω–∏–∏ 3—Ö –º–∏–Ω—É—Ç, –≤–∞—à –∑–∞–∫–∞–∑ –±—É–¥–µ—Ç –æ—Ç–º–µ–Ω–µ–Ω –∏ –í—ã –Ω–µ –ø–æ–ª—É—á–∏—Ç–µ –Ω–∏ —Ç–æ–≤–∞—Ä, –Ω–∏ –¥–µ–Ω—å–≥–∏ –Ω–∞ –±–∞–ª–∞–Ω—Å.\n"
                    "‚ûñ‚ûñ‚ûñ\n"
                    "–û–ø–ª–∞—Ç–∞ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –Ω–∞ <b>–ù–û–ú–ï–† –ë–ê–ù–ö–û–í–°–ö–û–ô –ö–ê–†–¢–´</b>. –ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–Ω–∫–æ–≤—Å–∫—É—é –∫–∞—Ä—Ç—É –º–æ–∂–Ω–æ –ª—é–±—ã–º —É–¥–æ–±–Ω—ã–º —Å–ø–æ—Å–æ–±–æ–º, –Ω–∞–ø—Ä–∏–º–µ—Ä: —Å–æ —Å–≤–æ–µ–≥–æ QIWI-–∫–æ—à–µ–ª—å–∫–∞, —Ç–µ—Ä–º–∏–Ω–∞–ª–∞, –±–∞–Ω–∫–æ–≤—Å–∫–æ–π –∫–∞—Ä—Ç—ã (card2card), Yandex.–î–µ–Ω—å–≥–∏, Payeer, WebMoney –∏ –¥—Ä—É–≥–∏–µ –ø–ª–∞—Ç–µ–∂–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã.\n"
                    "‚ûñ‚ûñ‚ûñ\n"
                    "–ü–µ—Ä–µ–≤–æ–¥–∏—Ç–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ <b>–¢–û–ß–ù–£–Æ</b> —Å—É–º–º—É, –∫–æ—Ç–æ—Ä—É—é –í–∞–º –≤—ã–¥–∞–ª –±–æ—Ç! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—á–∏—Ç—ã–≤–∞–π—Ç–µ —Å—É–º–º—É –∫–æ–º–∏—Å—Å–∏–∏ –∫ –ø–ª–∞—Ç–µ–∂—É!\n"
                    "‚ûñ‚ûñ‚ûñ\n"
                    "<b>–õ—é–±–∞—è —Ü–∏—Ñ—Ä–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –≤ —Å–∞–º—ã–π –ø–æ—Å–ª–µ–¥–Ω–∏–π –º–æ–º–µ–Ω—Ç, –∫–æ–≥–¥–∞ –í—ã –ø—Ä–æ–∏–∑–≤–µ–ª–∏ –æ–ø–ª–∞—Ç—É –∏ —É–≤–µ—Ä–µ–Ω—ã –≤ —Ç–æ—á–Ω–æ–π —Å—É–º–º–µ. –ü—Ä–∏ —Ç–æ—á–Ω–æ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –≤—Å–µ—Ö –ø—Ä–∞–≤–∏–ª - –í—ã –ø–æ–ª—É—á–∏—Ç–µ —Ç–æ–≤–∞—Ä.</b>\n"
                    "‚ûñ‚ûñ‚ûñ\n"
                    "–í–æ–ø—Ä–æ—Å—ã –ø–æ –∑–∞–≤–∏—Å—à–∏–º –ø–ª–∞—Ç–µ–∂–∞–º –ø—Ä–∏–Ω–∏–º–∞—é—Ç—Å—è –≤ —Ç–µ—á–µ–Ω–∏–∏ —Å—É—Ç–æ–∫ —Å –º–æ–º–µ–Ω—Ç–∞ –æ–ø–ª–∞—Ç—ã. –ï—Å–ª–∏ –í—ã –Ω–µ –ø–æ–ª—É—á–∏–ª–∏ —Ç–æ–≤–∞—Ä, –Ω–æ —Ä–µ–∞–ª—å–Ω–æ –ø–µ—Ä–µ–≤–µ–ª–∏ –¥–µ–Ω—å–≥–∏ –Ω–∞ –≤—ã–¥–∞–Ω–Ω—ã–µ –í–∞–º —Ä–µ–∫–≤–∏–∑–∏—Ç—ã - —Å–≤—è–∂–∏—Ç–µ—Å—å —Å–æ —Å–ª—É–∂–±–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –æ–±–º–µ–Ω–Ω–∏–∫–∞ –æ—Ç–ø—Ä–∞–≤–∏–≤ üëâ <b>/exticket</b>, –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —É–∫–∞–∂–∏—Ç–µ –Ω–æ–º–µ—Ä –∑–∞—è–≤–∫–∏ –∏ –¥–µ—Ç–∞–ª–∏ –≤–∞—à–µ–≥–æ –ø–ª–∞—Ç–µ–∂–∞ –≤–º–µ—Å—Ç–µ —Å —Ç–æ—á–Ω–æ–π —Å—É–º–º–æ–π –æ–ø–ª–∞—Ç—ã. –°–∫—Ä–∏–Ω—à–æ—Ç—ã —á–µ–∫–æ–≤ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã! –ü–æ –∏—Å—Ç–µ—á–µ–Ω–∏–∏ —Å—É—Ç–æ–∫ –∑–∞–ø—Ä–æ—Å—ã –ø–æ –∑–∞–≤–∏—Å—à–∏–º –ø–ª–∞—Ç–µ–∂–∞–º –Ω–µ –ø—Ä–∏–Ω–∏–º–∞—é—Ç—Å—è!\n"
                    "‚ûñ‚ûñ‚ûñ\n"
                    "–ó–∞—è–≤–∫–∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è —á–µ—Ä–µ–∑ —Å—Ç–æ—Ä–æ–Ω–Ω–∏–π –æ–±–º–µ–Ω–Ω–∏–∫, –µ—Å–ª–∏ –í—ã —Å–æ–∑–¥–∞–ª–∏ –æ–±—Ä–∞—â–µ–Ω–∏–µ –ø–æ –∑–∞–≤–∏—Å—à–µ–º—É –ø–ª–∞—Ç–µ–∂—É –∏ –í–∞—à—É –ø—Ä–æ–±–ª–µ–º—É –Ω–µ —Ä–µ—à–∏–ª–∏ - –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏ –º–∞–≥–∞–∑–∏–Ω–∞ —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥—É üëâ <b>/ticket</b>\n"
                    "‚ûñ‚ûñ‚ûñ\n"
                    "‚ùó –ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –ª—é–±—É—é —Ü–∏—Ñ—Ä—É\n"
                    "‚ûñ‚ûñ‚ûñ\n"
                    f"#‚É£ <b>–ó–∞–∫–∞–∑ ‚Ññ</b><code>{transaction_id}</code>, –∑–∞–ø–æ–º–Ω–∏—Ç–µ –µ–≥–æ.\n"
                    "‚ûñ‚ûñ‚ûñ\n"
                    f"–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏\n"
                    f"üí¨ <b>{comment_code}</b>\n"
                    "‚ûñ‚ûñ‚ûñ\n"
                    "‚ùó –í–Ω–∏–º–∞–Ω–∏–µ! –û–ø–ª–∞—á–∏–≤–∞—Ç—å —Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–º –Ω–µ –Ω—É–∂–Ω–æ. –ù–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞ –∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —Å–ª—É–∂–∏—Ç –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–ª–∞—Ç–µ–∂–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–∫–∞–∑–∞.\n"
                    "–ü–æ –Ω–æ–º–µ—Ä—É –∑–∞–∫–∞–∑–∞ –∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—é –≤—ã —Å–º–æ–∂–µ—Ç–µ —É–∑–Ω–∞—Ç—å —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ (–ø–æ–ª—É—á–∏—Ç—å –∞–¥—Ä–µ—Å) –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç –∏ —Å –ª—é–±–æ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –Ω–∞ üëâ <a href='https://kfp24.com/check'>–Ω–∞—à–µ–º —Å–∞–π—Ç–µ</a>.\n"
                    "–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –∏ –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ /start –∏–ª–∏ @"
                )
    
            await message.answer(response, parse_mode='HTML')
    
        else:
            await message.answer(
                "–î–ª—è –æ–ø–ª–∞—Ç—ã –¥–∞–Ω–Ω—ã–º –º–µ—Ç–æ–¥–æ–º –í–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å –∫—É–ø–æ–Ω–æ–º. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /pay\n"
                "–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –∏ –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ /start –∏–ª–∏ @",
                parse_mode='HTML'
            )
    
    @dp.message_handler(state=CitySelectionState.choosing_product)
    async def wrong_product_input(message: types.Message):
        await message.answer(
            "–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–¥—É–∫—Ç —Å—Ç—Ä–æ–≥–æ –∏–∑ —Å–ø–∏—Å–∫–∞!\n"
            "–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –∏ –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ /start –∏–ª–∏ @"
        )
    
    @dp.message_handler(lambda message: True, state=CitySelectionState.choosing_district)
    async def handle_district_choice(message: types.Message, state: FSMContext):
        if not message.text.startswith("/district"):
            await message.answer(
                "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–π–æ–Ω —Å—Ç—Ä–æ–≥–æ –∏–∑ —Å–ø–∏—Å–∫–∞\n"
                "–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –∏ –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ /start –∏–ª–∏ @"
            )
            return
        
        district_id_match = re.match(r"/district(\d+)", message.text)
        if district_id_match:
            district_id = int(district_id_match.group(1))
            district_name = database.get_district_name_by_id(district_id)
            if district_name:
                # –õ–æ–≥–∏–∫–∞ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ä–∞–π–æ–Ω–∞
                await message.answer(
                    f"–í—ã –≤—ã–±—Ä–∞–ª–∏ —Ä–∞–π–æ–Ω: {district_name}\n"
                    "–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –∏ –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ /start –∏–ª–∏ @"
                )
            else:
                await message.answer(
                    "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–π–æ–Ω —Å—Ç—Ä–æ–≥–æ –∏–∑ —Å–ø–∏—Å–∫–∞\n"
                    "–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –∏ –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ /start –∏–ª–∏ @"
                )
        else:
            await message.answer(
                "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–π–æ–Ω —Å—Ç—Ä–æ–≥–æ –∏–∑ —Å–ø–∏—Å–∫–∞\n"
                "–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –∏ –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ /start –∏–ª–∏ @"
            )
    